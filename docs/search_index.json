[["index.html", "The media cookbook Working paper of the ANR-DFG Imageun Project Chapter 1 Introduction", " The media cookbook Working paper of the ANR-DFG Imageun Project Claude Grasland 2022-07-12 Chapter 1 Introduction The aim of this cookbook is to exchange ideas and programs between members of the “Media Group” of the ANR-DFG project IMAGEUN. "],["11-corpus-mediacloud.html", "Chapter 2 Import from Media Cloud 2.1 Selection of media with source manager 2.2 Checking the stability through time 2.3 Selection of news specifically related to a topic (option) 2.4 Download and storage of news", " Chapter 2 Import from Media Cloud library(quanteda) library(dplyr) library(ggplot2) library(tidytext) library(knitr) knitr::opts_chunk$set(cache = TRUE, echo = TRUE, comment = &quot;&quot;) (tbd : presentation of the MediaCloud project) Mediacloud can be freely used by researchers. All you have to do is to create an account at the following adress : https://explorer.mediacloud.org You have different ways to get title of news. We will focus here on a simple example of data obtained through the mediacloud interface. We suppose that you want to extract news from the Tunisian newspapers speaking from Europe. 2.1 Selection of media with source manager We use the application called Source Manager and we introduce a research by collection which is the most convenient to explore what is available in a country. In our example, the target country is Tunisia and we have three collections that are propsed : We have selected the collection named “Tunisia National” because we are interested in the most important newspapers of the country. The buble graphic on the right indicates immediately the media that has produced the highest number of news, but it is wise to explore in more details the list on the left which indicates for each media the statting date of data collection. When a media appears interesting, we click on its name to obtain a brief summary of the metadata. For example, in the case of L’économiste Maghrebin the metadata indicates : The media looks promising, but before to go further, it can be better to have a look at the website of the media to have a more concrete idea of the content if we don’t know in advance what it is about in terms of content, what is the ideological orientation, etc. Here we can see that this is an ecnomic journal, published in french, with news organized in concentric geographic circles (Nation &gt; Maghreb &gt; Africa &gt; World) which is precisely what we are looking for in the IMAGEUN project. We will further complete the informations about this, but before to do that we have to check in more details if the production of the media is regular through time with another tool offered by mediacloud, the explorer. 2.2 Checking the stability through time We have clicked on search in explorer on the metadata page of the Source Manager and obtain a news interfacce where we modify the date to cover the full period of collection of the media (or our period of interest). In the research field, we let the search term * which indicates a research on all news. Below your request, you obtain a graphic entitled Attention Over Time with the distribution of the number of news published per day which help you to verify if the distribution of news is regular through time. You just have to modify the type of graphic in order to visualize Story Count and you can choose the time span you want (day, week or month) for the evaluation of the regularity of news flow. In our example, we notice that at daily level they are some brief period of break in 2019, but the flow is reasonnabely regular with approximatively 5 news per day at the beginning and 10 to 20 in the final period. We also notice a classical week cycle with a decrease of news published during the week-end. Going down, you will find a news panel entitled Total Attention which gives you the total number of stories found. In our example, we have a total of 13626 stories produced by our media over the period. 2.3 Selection of news specifically related to a topic (option) You can eventually use Mediacloud to check the number of news produced about a specific topic, for example Europe or European Union or EU. The request shouldbe put in lower case with \"\" for compounds. Detailed explanation are available in the query guide. This time you can use the graphic option Stories percentage rather than Story count if you want to viusalize the salience of the topic through time. In our example, we have 369 news that appears to be related to our request about Europe or EU with a relatively regular pattern at month level of 1 to 3 % of news and exceptionaly 5 to 7 %. 2.4 Download and storage of news According to your selection (all news or a specific topic) you will download more or less title. Here, me make the choice to get all news, which means that we have to repeat the original request with *. Finally, by clicking on the button Download all story URLS, you can get a .csv file that you can easily load in your favorite programming language as we will see in the next section. "],["12-mediacloud_to_quanteda.html", "Chapter 3 quanteda corpus 3.1 Example 3.2 Germany 3.3 France 3.4 Royaume-Uni 3.5 Ireland 3.6 Turkey 3.7 Tunisia 3.8 Algeria", " Chapter 3 quanteda corpus library(quanteda) library(dplyr) library(ggplot2) library(tidytext) library(knitr) library(readtext) knitr::opts_chunk$set(cache = TRUE, echo = TRUE, comment = &quot;&quot;) In the previous section (ref…) whe have obtained a .csv file of news collected from MediaCloud. We will try now to put this data in a standard form and we have chosen the format of the quanteda package as reference for data organization and storage. But of course the researchers involved in the project can prefer to use other R packages like tm or tidytext. And they can also prefer to use another programming language for Python. It is the reason why we explain how to transform and export the data that has been prepared and harmonized with quanteda in various format like .csv or JSON. 3.1 Example We detail here an example of importation with the example of the newspaper “L’économiste maghrebin” 3.1.1 Importation of text to R This step is not always obvious because many problems of encoding can appear that are more or less easy to solve. In principle , the data from Media Cloud are exported in standard UTF-8 but as we will see it is not necessary the case. We try firstly to use the standard R function read.csv(): store &lt;- &quot;corpus/TUN/&quot; media &lt;- &quot;fr_TUN_ecomag&quot; type &lt;-&quot;.csv&quot; fic &lt;- paste(store,media,type,sep=&quot;&quot;) df&lt;-read.csv(fic, sep=&quot;,&quot;, header=T, encoding = &quot;UTF-8&quot;, stringsAsFactors = F) head(df) stories_id publish_date 1 1129295780 2019-01-02 03:42:46 2 1129295771 2019-01-02 04:06:27 3 1129295760 2019-01-02 06:05:08 4 1129578051 2019-01-02 10:05:06 5 1129461662 2019-01-02 07:52:36 6 1129461636 2019-01-02 08:57:54 title 1 Les tarifs de l&amp;#8217;ADSL réduits à partir du 1er janvier 2019 2 6ème Sfax Marathon International des Oliviers 3 Télécharger la version finale de la Loi de finances 2019 4 Chawki Tabib : 245 dossiers de corruption présumée transmis au ministère public 5 Panoro Energy finalise l&amp;#8217;acquisition de OMV Tunisia 6 La partie syndicale maintient le boycott des examens du secondaire url 1 https://www.leconomistemaghrebin.com/2019/01/02/tarifs-adsl-reduits-1-janvier-2019/ 2 https://www.leconomistemaghrebin.com/2019/01/02/sfax-marathon-international-oliviers/ 3 https://www.leconomistemaghrebin.com/2019/01/02/telecharger-la-version-finale-de-la-loi-de-finances-2019/ 4 https://www.leconomistemaghrebin.com/2019/01/02/chawki-tabib-245-dossiers-transferes-au-ministere-public/ 5 https://www.leconomistemaghrebin.com/2019/01/02/panoro-energy-finalise-lacquisition-de-omv-tunisia/ 6 https://www.leconomistemaghrebin.com/2019/01/02/partie-syndicale-boycott-examens-secondaire/ language ap_syndicated themes media_id media_name 1 fr False 623820 L&#39;Economiste Maghrebin 2 fr False 623820 L&#39;Economiste Maghrebin 3 en False 623820 L&#39;Economiste Maghrebin 4 fr False 623820 L&#39;Economiste Maghrebin 5 fr False 623820 L&#39;Economiste Maghrebin 6 fr False 623820 L&#39;Economiste Maghrebin media_url 1 http://www.leconomistemaghrebin.com/ 2 http://www.leconomistemaghrebin.com/ 3 http://www.leconomistemaghrebin.com/ 4 http://www.leconomistemaghrebin.com/ 5 http://www.leconomistemaghrebin.com/ 6 http://www.leconomistemaghrebin.com/ str(df) &#39;data.frame&#39;: 12794 obs. of 10 variables: $ stories_id : int 1129295780 1129295771 1129295760 1129578051 1129461662 1129461636 1130259352 1131673651 1132241460 1132432991 ... $ publish_date : chr &quot;2019-01-02 03:42:46&quot; &quot;2019-01-02 04:06:27&quot; &quot;2019-01-02 06:05:08&quot; &quot;2019-01-02 10:05:06&quot; ... $ title : chr &quot;Les tarifs de l&amp;#8217;ADSL réduits à partir du 1er janvier 2019&quot; &quot;6ème Sfax Marathon International des Oliviers&quot; &quot;Télécharger la version finale de la Loi de finances 2019&quot; &quot;Chawki Tabib : 245 dossiers de corruption présumée transmis au ministère public&quot; ... $ url : chr &quot;https://www.leconomistemaghrebin.com/2019/01/02/tarifs-adsl-reduits-1-janvier-2019/&quot; &quot;https://www.leconomistemaghrebin.com/2019/01/02/sfax-marathon-international-oliviers/&quot; &quot;https://www.leconomistemaghrebin.com/2019/01/02/telecharger-la-version-finale-de-la-loi-de-finances-2019/&quot; &quot;https://www.leconomistemaghrebin.com/2019/01/02/chawki-tabib-245-dossiers-transferes-au-ministere-public/&quot; ... $ language : chr &quot;fr&quot; &quot;fr&quot; &quot;en&quot; &quot;fr&quot; ... $ ap_syndicated: chr &quot;False&quot; &quot;False&quot; &quot;False&quot; &quot;False&quot; ... $ themes : chr &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... $ media_id : int 623820 623820 623820 623820 623820 623820 623820 623820 623820 623820 ... $ media_name : chr &quot;L&#39;Economiste Maghrebin&quot; &quot;L&#39;Economiste Maghrebin&quot; &quot;L&#39;Economiste Maghrebin&quot; &quot;L&#39;Economiste Maghrebin&quot; ... $ media_url : chr &quot;http://www.leconomistemaghrebin.com/&quot; &quot;http://www.leconomistemaghrebin.com/&quot; &quot;http://www.leconomistemaghrebin.com/&quot; &quot;http://www.leconomistemaghrebin.com/&quot; ... The importation was successfull for 13623 news but message of errors appeared for 3 news where R sent a message of error telling : Error in gregexpr(calltext, singleline, fixed = TRUE) : regular expression is invalid UTF-8 Looking in more details, we discover also some problems of encoding in news like in the following example where the text of the news appears differently if we apply the standard functions paste() o0 the specialized function r knitr::kable for printing. paste(df[9, 3]) [1] &quot;Néji Jalloul : &amp;#8220;Nidaa Tounes peut revenir si&amp;#8230;&amp;#8221;&quot; kable((df[9,3])) x Néji Jalloul : “Nidaa Tounes peut revenir si…” 3.1.2 encoding problems It is sometime possible to adapt manually the encoding problem whan they are not too much as in present example. df$text&lt;-df$title # standardize apostrophe df$text&lt;-gsub(&quot;&amp;#8217;&quot;,&quot;&#39;&quot;,df$text) # standardize punct df$text&lt;-gsub(&#39;&amp;#8230;&#39;,&#39;.&#39;,df$text) # standardize hyphens df$text&lt;-gsub(&#39;&amp;#8211;&#39;,&#39;-&#39;,df$text) # Remove quotation marks df$text&lt;-gsub(&#39;&amp;#171;&amp;#160;&#39;,&#39;&#39;,df$text) df$text&lt;-gsub(&#39;&amp;#160;&amp;#187;&#39;,&#39;&#39;,df$text) df$text&lt;-gsub(&#39;&amp;#8220;&#39;,&#39;&#39;,df$text) df$text&lt;-gsub(&#39;&amp;#8221;&#39;,&#39;&#39;,df$text) df$text&lt;-gsub(&#39;&amp;#8216;&#39;,&#39;&#39;,df$text) df$text&lt;-gsub(&#39;&amp;#8243;&#39;,&#39;&#39;,df$text) We can introduce othr cleaning procedures here or keep it for later analysis 3.1.3 Transformation in quanteda format We propose a storage based on quanteda format by just transforming the data that has been produced by readtext. We keep only the name of the source and the date of publication. # Create Quanteda corpus qd&lt;-corpus(df,docid_field = &quot;stories_id&quot;) # Select docvar fields and rename media qd$date &lt;-as.Date(qd$publish_date) qd$source &lt;-media docvars(qd)&lt;-docvars(qd)[,c(&quot;source&quot;,&quot;date&quot;)] # Add global meta meta(qd,&quot;meta_source&quot;)&lt;-&quot;Media Cloud &quot; meta(qd,&quot;meta_time&quot;)&lt;-&quot;Download the 2021-09-30&quot; meta(qd,&quot;meta_author&quot;)&lt;-&quot;Elaborated by Claude Grasland&quot; meta(qd,&quot;project&quot;)&lt;-&quot;ANR-DFG Project IMAGEUN&quot; We have created a quanteda object with a lot of information stored in various fields. The structure of the object is the following one str(qd) &#39;corpus&#39; Named chr [1:12794] &quot;Les tarifs de l&#39;ADSL réduits à partir du 1er janvier 2019&quot; ... - attr(*, &quot;names&quot;)= chr [1:12794] &quot;1129295780&quot; &quot;1129295771&quot; &quot;1129295760&quot; &quot;1129578051&quot; ... - attr(*, &quot;docvars&quot;)=&#39;data.frame&#39;: 12794 obs. of 5 variables: ..$ docname_: chr [1:12794] &quot;1129295780&quot; &quot;1129295771&quot; &quot;1129295760&quot; &quot;1129578051&quot; ... ..$ docid_ : Factor w/ 12794 levels &quot;1129295780&quot;,&quot;1129295771&quot;,..: 1 2 3 4 5 6 7 8 9 10 ... ..$ segid_ : int [1:12794] 1 1 1 1 1 1 1 1 1 1 ... ..$ source : chr [1:12794] &quot;fr_TUN_ecomag&quot; &quot;fr_TUN_ecomag&quot; &quot;fr_TUN_ecomag&quot; &quot;fr_TUN_ecomag&quot; ... ..$ date : Date[1:12794], format: &quot;2019-01-02&quot; &quot;2019-01-02&quot; ... - attr(*, &quot;meta&quot;)=List of 3 ..$ system:List of 6 .. ..$ package-version:Classes &#39;package_version&#39;, &#39;numeric_version&#39; hidden list of 1 .. .. ..$ : int [1:3] 3 0 0 .. ..$ r-version :Classes &#39;R_system_version&#39;, &#39;package_version&#39;, &#39;numeric_version&#39; hidden list of 1 .. .. ..$ : int [1:3] 4 0 2 .. ..$ system : Named chr [1:3] &quot;Darwin&quot; &quot;x86_64&quot; &quot;claudegrasland1&quot; .. .. ..- attr(*, &quot;names&quot;)= chr [1:3] &quot;sysname&quot; &quot;machine&quot; &quot;user&quot; .. ..$ directory : chr &quot;/Users/claudegrasland1/git/media_cookbook&quot; .. ..$ created : Date[1:1], format: &quot;2022-07-12&quot; .. ..$ source : chr &quot;data.frame&quot; ..$ object:List of 2 .. ..$ unit : chr &quot;documents&quot; .. ..$ summary:List of 2 .. .. ..$ hash: chr(0) .. .. ..$ data: NULL ..$ user :List of 4 .. ..$ meta_source: chr &quot;Media Cloud &quot; .. ..$ meta_time : chr &quot;Download the 2021-09-30&quot; .. ..$ meta_author: chr &quot;Elaborated by Claude Grasland&quot; .. ..$ project : chr &quot;ANR-DFG Project IMAGEUN&quot; We can look at the first titles with head() kable(head(qd,3)) x 1129295780 Les tarifs de l’ADSL réduits à partir du 1er janvier 2019 1129295771 6ème Sfax Marathon International des Oliviers 1129295760 Télécharger la version finale de la Loi de finances 2019 We can get meta information on each stories with summary() summary(head(qd,3)) Corpus consisting of 3 documents, showing 3 documents: Text Types Tokens Sentences source date 1129295780 11 11 1 fr_TUN_ecomag 2019-01-02 1129295771 6 6 1 fr_TUN_ecomag 2019-01-02 1129295760 8 10 1 fr_TUN_ecomag 2019-01-02 We can get meta information about the full document meta(qd) $meta_source [1] &quot;Media Cloud &quot; $meta_time [1] &quot;Download the 2021-09-30&quot; $meta_author [1] &quot;Elaborated by Claude Grasland&quot; $project [1] &quot;ANR-DFG Project IMAGEUN&quot; 3.1.4 Storage of the quanteda object We can finally save the object in .RDS format in a directory dedicated to our quanteda files. It can be usefull to give some information in the name of the file store &lt;- &quot;quanteda/&quot; type&lt;- &quot;.RDS&quot; myfile &lt;- paste(store,media,type,sep=&quot;&quot;) myfile [1] &quot;quanteda/fr_TUN_ecomag.RDS&quot; saveRDS(qd,myfile) qd[1:3] Corpus consisting of 3 documents and 2 docvars. 1129295780 : &quot;Les tarifs de l&#39;ADSL réduits à partir du 1er janvier 2019&quot; 1129295771 : &quot;6ème Sfax Marathon International des Oliviers&quot; 1129295760 : &quot;Télécharger la version finale de la Loi de finances 2019&quot; summary(qd,3) Corpus consisting of 12794 documents, showing 3 documents: Text Types Tokens Sentences source date 1129295780 11 11 1 fr_TUN_ecomag 2019-01-02 1129295771 6 6 1 fr_TUN_ecomag 2019-01-02 1129295760 8 10 1 fr_TUN_ecomag 2019-01-02 We have kept all the information present in the initial file, but also added specific metadata of interest for us. The size of the storage is now equal to 0.6 Mb which means a division by 6 as compared to the initial .csv file downloaded from Media Cloud. 3.1.5 Backtransformation of quanteda to data.table or tibble In the following steps, we will make an intensive use of quanteda, but sometimes it can be usefull to export the results in a more practical format or to use other packages. For this reasons, it is important to know that the tidytextpackage can easily transform quanteda object in tibbles which are more classical and easy to manage td &lt;- tidy(qd) Warning: &#39;texts.corpus&#39; is deprecated. Use &#39;as.character&#39; instead. See help(&quot;Deprecated&quot;) head(td) # A tibble: 6 × 3 text source date &lt;chr&gt; &lt;chr&gt; &lt;date&gt; 1 Les tarifs de l&#39;ADSL réduits à partir du 1er janvier 2019 fr_TU… 2019-01-02 2 6ème Sfax Marathon International des Oliviers fr_TU… 2019-01-02 3 Télécharger la version finale de la Loi de finances 2019 fr_TU… 2019-01-02 4 Chawki Tabib : 245 dossiers de corruption présumée transmis… fr_TU… 2019-01-02 5 Panoro Energy finalise l&#39;acquisition de OMV Tunisia fr_TU… 2019-01-02 6 La partie syndicale maintient le boycott des examens du sec… fr_TU… 2019-01-02 str(td) tibble [12,794 × 3] (S3: tbl_df/tbl/data.frame) $ text : chr [1:12794] &quot;Les tarifs de l&#39;ADSL réduits à partir du 1er janvier 2019&quot; &quot;6ème Sfax Marathon International des Oliviers&quot; &quot;Télécharger la version finale de la Loi de finances 2019&quot; &quot;Chawki Tabib : 245 dossiers de corruption présumée transmis au ministère public&quot; ... $ source: chr [1:12794] &quot;fr_TUN_ecomag&quot; &quot;fr_TUN_ecomag&quot; &quot;fr_TUN_ecomag&quot; &quot;fr_TUN_ecomag&quot; ... $ date : Date[1:12794], format: &quot;2019-01-02&quot; &quot;2019-01-02&quot; ... 3.2 Germany 3.2.1 Frankfurter Allgemeine Zeitung qd&lt;-readRDS(&quot;quanteda/de_DEU_frankf.RDS&quot;) summary(qd,3) Corpus consisting of 88313 documents, showing 3 documents: Text Types Tokens Sentences source date regs nbregs 930016745 5 5 1 de_DEU_frankf 2020-09-06 0 1118202030 10 10 1 de_DEU_frankf 2021-07-06 0 1128764967 14 14 1 de_DEU_frankf 2019-01-01 Q1286 1 paste(qd[1:5]) [1] &quot;Bundestagswahl: Durchmarsch der AfD&quot; [2] &quot;Kahl folgt auf Schindler: CSU kritisiert Wechsel an BND-Spitze&quot; [3] &quot;Dramatisches Ende einer Bergtour: Drei Deutsche nach eisiger Nacht in Tiroler Alpen gerettet&quot; [4] &quot;Trotz Gelbwesten-Protesten: Macron kündigt für 2019 weitere Reformen an&quot; [5] &quot;May wirbt in Neujahrsansprache für Brexit-Abkommen&quot; 3.2.2 Süddeutsche Zeitung qd&lt;-readRDS(&quot;quanteda/de_DEU_suddeu.RDS&quot;) summary(qd,5) Corpus consisting of 35444 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 931884497 4 4 1 de_DEU_suddeu 2019-06-17 Q458 1 1128842071 8 8 1 de_DEU_suddeu 2019-01-01 0 1128842047 8 8 1 de_DEU_suddeu 2019-01-01 0 1128842007 4 4 1 de_DEU_suddeu 2019-01-01 0 1128842024 5 5 1 de_DEU_suddeu 2019-01-01 0 paste(qd[1:5]) [1] &quot;EU setzt Russland Ultimatum&quot; [2] &quot;Flüchtlinge : Großbritannien verlegt Schiffe in den Ärmelkanal&quot; [3] &quot;Zugang zum Internet : Buena Vista Netz Club&quot; [4] &quot;Brasilien: Bolsonaros Plan&quot; [5] &quot;Dirty Dancing: Getanzter Dreck&quot; 3.3 France 3.3.1 Le Figaro qd&lt;-readRDS(&quot;quanteda/fr_FRA_figaro.RDS&quot;) summary(qd,5) Corpus consisting of 128807 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1128863317 12 12 1 fr_FRA_figaro 2019-01-01 ST_DEU 1 1128915698 11 11 1 fr_FRA_figaro 2019-01-01 CA_JPN 1 1128915693 8 8 1 fr_FRA_figaro 2019-01-01 ST_THA 1 1128915594 8 8 1 fr_FRA_figaro 2019-01-01 0 1128915683 8 8 1 fr_FRA_figaro 2019-01-01 0 tags nbtags 0 CA_JPN 1 ST_THA 1 0 0 paste(qd[1:5]) [1] &quot;Légion d&#39;honneur : autant de femmes distinguées que d&#39;hommes ce 1er janvier&quot; [2] &quot;Tokyo : une voiture fonce dans la foule, 9 blessés&quot; [3] &quot;Thaïlande : le roi sera couronné en mai&quot; [4] &quot;Ces joueurs qui pourraient enflammer le mercato hivernal&quot; [5] &quot;Strasbourg : 9 blessés à cause des pétards&quot; 3.3.2 Le Monde qd&lt;-readRDS(&quot;quanteda/fr_FRA_lmonde.RDS&quot;) summary(qd,5) Corpus consisting of 49731 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1128825289 12 12 1 fr_FRA_lmonde 2019-01-01 0 1128864671 11 11 1 fr_FRA_lmonde 2019-01-01 0 1128864634 9 9 1 fr_FRA_lmonde 2019-01-01 0 1128864655 13 13 1 fr_FRA_lmonde 2019-01-01 0 1128908122 11 11 1 fr_FRA_lmonde 2019-01-01 0 paste(qd[1:5]) [1] &quot;Les pesticides de synthèse interdits aux particuliers à partir du 1er janvier&quot; [2] &quot;Mauritanie : un député antiesclavagiste libéré après cinq mois de prison&quot; [3] &quot;Jeanne Calment était-elle vraiment la doyenne de l’humanité ?&quot; [4] &quot;Italie : après l’adoption du budget, 2019 commence dans une ambiance chaotique&quot; [5] &quot;Pérou : destitution de deux procureurs qui enquêtaient sur l’affaire Odebrecht&quot; 3.4 Royaume-Uni 3.4.1 The Guardian qd&lt;-readRDS(&quot;quanteda/en_GBR_guardi.RDS&quot;) summary(qd,5) Corpus consisting of 77875 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1128777161 12 12 1 en_GBR_guardi 2019-01-01 Q15 1 1128777148 10 10 1 en_GBR_guardi 2019-01-01 Q7204 1 1128795880 11 11 1 en_GBR_guardi 2019-01-01 0 1128795872 9 9 1 en_GBR_guardi 2019-01-01 Q15 1 1128795860 12 13 1 en_GBR_guardi 2019-01-01 0 paste(qd[1:5]) [1] &quot;Toxic legacy taints ANC as it nears 25-year rule in South Africa&quot; [2] &quot;Why Trump’s Middle East peace plan is just a sideshow&quot; [3] &quot;Preparations for the Harbin ice and snow festival – in pictures&quot; [4] &quot;Turning air into drinking water: Africa&#39;s inspired inventors&quot; [5] &quot;&#39;Resign from Facebook&#39;: experts offer Mark Zuckerberg advice for 2019&quot; 3.4.2 The Daily Telegraph qd&lt;-readRDS(&quot;quanteda/en_GBR_telegr.RDS&quot;) summary(qd,5) Corpus consisting of 41803 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1001621055 10 13 2 en_GBR_telegr 2020-03-15 0 794012047 6 7 1 en_GBR_telegr 2021-04-15 0 1020025042 11 11 1 en_GBR_telegr 2020-07-06 Q46 1 1071998286 7 7 1 en_GBR_telegr 2021-06-26 0 1080057597 11 12 1 en_GBR_telegr 2020-06-15 0 paste(qd[1:5]) [1] &quot;Guant?namo &#39;suicides&#39; were at secret &#39;black&#39; site&quot; [2] &quot;IKEA founder &#39;was Nazi recruiter&#39;&quot; [3] &quot;Europe tells Britain to justify itself over fingerprinting children in schools&quot; [4] &quot;Sumo champion Asashoryu outrages sport with celebration&quot; [5] &quot;Barack Obama meets Jewish leaders over &#39;tough line&#39; on Israel&quot; 3.5 Ireland 3.5.1 The Irish Time qd&lt;-readRDS(&quot;quanteda/en_IRL_irtime.RDS&quot;) summary(qd,5) Corpus consisting of 108479 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1003842232 8 9 1 en_IRL_irtime 2020-01-15 0 1128791232 8 8 1 en_IRL_irtime 2019-01-01 0 1128791226 7 7 1 en_IRL_irtime 2019-01-01 0 1128803852 10 10 1 en_IRL_irtime 2019-01-01 0 1128874798 11 11 1 en_IRL_irtime 2019-01-01 0 paste(qd[1:5]) [1] &quot;Strong corporate tax receipts ‘sustainable’ until 2020&quot; [2] &quot;Number of British people becoming Irish citizens surges&quot; [3] &quot;7 tips to build your physical stamina&quot; [4] &quot;Having a baby abroad changed my perspective on living away&quot; [5] &quot;New Year’s Eve celebrations around the world to ring in 2019&quot; 3.5.2 The Belfast Telegraph qd&lt;-readRDS(&quot;quanteda/en_NIR_beltel.RDS&quot;) summary(qd,5) Corpus consisting of 99932 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1128845104 8 8 1 en_NIR_beltel 2019-01-01 0 1128845083 11 11 1 en_NIR_beltel 2019-01-01 0 1128845064 9 9 1 en_NIR_beltel 2019-01-01 0 1128845042 11 11 1 en_NIR_beltel 2019-01-01 0 1128905097 10 10 1 en_NIR_beltel 2019-01-01 0 paste(qd[1:5]) [1] &quot;Officer disarmed knifeman in Foyleside Centre court told&quot; [2] &quot;Hoaxers are putting lives at risk, warns fire service officer&quot; [3] &quot;The volunteers providing a lifeline to elderly Belfast residents&quot; [4] &quot;Tributes to Northern Ireland man Christopher Donnelly after death in US&quot; [5] &quot;Belfast bar to build rooftop terrace in £350k extension&quot; 3.6 Turkey 3.6.1 The Yeni Sati qd&lt;-readRDS(&quot;quanteda/tr_TUR_yenisa.RDS&quot;) summary(qd,5) Corpus consisting of 97638 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1128735746 4 4 1 tr_TUR_yenisa 2019-01-01 0 1128760707 5 5 1 tr_TUR_yenisa 2019-01-01 0 1128776505 7 7 1 tr_TUR_yenisa 2019-01-01 0 1128776514 7 7 1 tr_TUR_yenisa 2019-01-01 0 1128796514 4 4 1 tr_TUR_yenisa 2019-01-01 0 paste(qd[1:5]) [1] &quot;Bingöl&#39;de 4.2 şiddetinde deprem&quot; [2] &quot;Pentagon&#39;da deprem: Görevden alındı&quot; [3] &quot;Cumhurbaşkanı Erdoğan en seçkin dünya lideri seçildi&quot; [4] &quot;Japonya&#39;da araçlı saldırı: Yayaların arasında daldı&quot; [5] &quot;Almanya&#39;da Mekke&#39;nin fethi kutlandı&quot; 3.6.2 Cumhuryet qd&lt;-readRDS(&quot;quanteda/tr_TUR_cumhur.RDS&quot;) summary(qd,5) Corpus consisting of 133713 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1129020777 7 7 1 tr_TUR_cumhur 2019-01-01 0 1129020771 8 8 1 tr_TUR_cumhur 2019-01-01 0 1129020761 5 5 1 tr_TUR_cumhur 2019-01-01 0 1129000336 6 6 1 tr_TUR_cumhur 2019-01-01 0 1129020744 4 4 1 tr_TUR_cumhur 2019-01-01 0 paste(qd[1:5]) [1] &quot;Hakkari-Şırnak kara yolunda çığ düşmesi sonucu kapandı&quot; [2] &quot;Adana&#39;da 10 araç birbirine girdi: Yaralılar var&quot; [3] &quot;CHP binasında partililerden oturma eylemi&quot; [4] &quot;Suriye sınırına askeri sevkiyat devam ediyor&quot; [5] &quot;İsveç&#39;te camiye silahlı saldırı&quot; 3.7 Tunisia 3.7.1 Réalités qd&lt;-readRDS(&quot;quanteda/fr_TUN_realit.RDS&quot;) summary(qd,5) Corpus consisting of 23042 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1128872823 8 8 1 fr_TUN_realit 2019-01-01 0 1128936210 11 11 1 fr_TUN_realit 2019-01-01 0 1128961861 12 12 1 fr_TUN_realit 2019-01-01 0 1129004162 10 10 1 fr_TUN_realit 2019-01-01 0 1129004150 5 5 1 fr_TUN_realit 2019-01-01 0 paste(qd[1:5]) [1] &quot;L&#39;Est de la Turquie frappé par un séisme&quot; [2] &quot;Enfidha : un Omda auteur d&#39;un trafic de logements sociaux ?&quot; [3] &quot;Russie : la mort d&#39;un tunisien en prison suscite encore des interrogations&quot; [4] &quot;Abattage de vaches malades à Sousse: Ouverture d&#39;une enquête&quot; [5] &quot;Quels remèdes aux incertitudes ?&quot; 3.7.2 L’économiste Maghrebin qd&lt;-readRDS(&quot;quanteda/fr_TUN_ecomag.RDS&quot;) summary(qd,5) Corpus consisting of 12794 documents, showing 5 documents: Text Types Tokens Sentences source date 1129295780 11 11 1 fr_TUN_ecomag 2019-01-02 1129295771 6 6 1 fr_TUN_ecomag 2019-01-02 1129295760 8 10 1 fr_TUN_ecomag 2019-01-02 1129578051 12 12 1 fr_TUN_ecomag 2019-01-02 1129461662 7 7 1 fr_TUN_ecomag 2019-01-02 paste(qd[1:5]) [1] &quot;Les tarifs de l&#39;ADSL réduits à partir du 1er janvier 2019&quot; [2] &quot;6ème Sfax Marathon International des Oliviers&quot; [3] &quot;Télécharger la version finale de la Loi de finances 2019&quot; [4] &quot;Chawki Tabib : 245 dossiers de corruption présumée transmis au ministère public&quot; [5] &quot;Panoro Energy finalise l&#39;acquisition de OMV Tunisia&quot; 3.7.3 La Presse qd&lt;-readRDS(&quot;quanteda/fr_TUN_presse.RDS&quot;) summary(qd,5) Corpus consisting of 11553 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1319140184 16 21 1 fr_TUN_presse 2019-04-24 0 1332556981 6 6 1 fr_TUN_presse 2019-07-08 0 1378389487 11 12 1 fr_TUN_presse 2019-08-29 0 1378389531 21 24 1 fr_TUN_presse 2019-08-29 0 1378389503 12 12 1 fr_TUN_presse 2019-08-29 0 paste(qd[1:5]) [1] &quot;Grève de 24 heures à l&#39;aéroport de Tunis Carthage à partir de ce soir à minuit | La Presse de Tunisie&quot; [2] &quot;Accueil | La Presse de Tunisie&quot; [3] &quot;Nomination de Najet Neili, coordinatrice des Journées cinématographiques de Carthage 2019&quot; [4] &quot;40ème jour du décès du président de la République Béji Caïd Essebsi : « On fait tout pour empêcher l’organisation de la cérémonie »&quot; [5] &quot;Iyadh Elloumi : « Nous entamerons une grève de la faim »&quot; 3.7.4 Babnet qd&lt;-readRDS(&quot;quanteda/ar_TUN_babnet.RDS&quot;) summary(qd,5) Corpus consisting of 42649 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1128915717 17 17 1 ar_TUN_babnet 2019-01-01 0 1128915704 13 13 1 ar_TUN_babnet 2019-01-01 0 1128915643 11 11 1 ar_TUN_babnet 2019-01-01 0 1128915651 16 16 1 ar_TUN_babnet 2019-01-01 0 1128915618 6 6 1 ar_TUN_babnet 2019-01-01 0 paste(qd[1:5]) [1] &quot;سعد الحريري: على كل القوى السياسية أن تتنازل لتشكيل الحكومة وواثق من أننا سنصل إلى حل &quot; [2] &quot;مقتل أكثر من 300 شخص في حوادث سير بتايلاند خلال احتفالات العام الجديد &quot; [3] &quot; المرزوقي يطالب التونسيين بالكثير من العمل ويدعوهم للكفّ عن الشتم والخصام &quot; [4] &quot; مع انطلاق سنة 2019: البنك المركزي التونسي يسمح لمؤسسات الدفع الانطلاق في اسداء خدماتها للعملاء&quot; [5] &quot;Seoul Welcomes Kim&#39;s New Year Address &quot; 3.8 Algeria 3.8.1 Al Nahar qd&lt;-readRDS(&quot;quanteda/ar_DZA_alnaha.RDS&quot;) summary(qd,5) Corpus consisting of 36341 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1128917505 4 4 1 ar_DZA_alnaha 2019-01-01 0 1128917491 7 7 1 ar_DZA_alnaha 2019-01-01 0 1128917468 7 7 1 ar_DZA_alnaha 2019-01-01 0 1128917411 5 5 1 ar_DZA_alnaha 2019-01-01 Q15 1 1128917432 5 5 1 ar_DZA_alnaha 2019-01-01 0 paste(qd[1:5]) [1] &quot;غول يستبعد تأجيل الرئاسيات&quot; [2] &quot;حصيلة الجيش لمختلف العمليات المنفذة في 2018&quot; [3] &quot;الكاف تُسقط محرز كأفضل لاعب إفريقي!&quot; [4] &quot;صلاح يتفوق على محرز إفريقيا &quot; [5] &quot;اتحاد بلعباس في مفترق الطرق &quot; 3.8.2 El Kahber qd&lt;-readRDS(&quot;quanteda/ar_DZA_elkahb.RDS&quot;) summary(qd,5) Corpus consisting of 57230 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1128760341 10 10 1 ar_DZA_elkahb 2019-01-01 0 1128777970 11 12 2 ar_DZA_elkahb 2019-01-01 0 1128790442 7 7 1 ar_DZA_elkahb 2019-01-01 0 1128804378 11 11 1 ar_DZA_elkahb 2019-01-01 0 1128804373 8 8 1 ar_DZA_elkahb 2019-01-01 0 paste(qd[1:5]) [1] &quot;وهران: تأكيد حكم الإعدام لقاتل الطفلة سلسبيل و شريكه&quot; [2] &quot;بونجاح.. الجزائري الوحيد في التشكيلة المثالية للقارة السمراء لـ2018 !&quot; [3] &quot;إدارة فنربخشة توافق على طلب سليماني !&quot; [4] &quot;وفاة مهندسة في ورشة عدل ببوينان بعد سقوط مواد بناء عليها&quot; [5] &quot;إقالة المتحدثة باسم البنتاغون بسبب معاملتها السيئة للموظفين&quot; 3.8.3 El Watan qd&lt;-readRDS(&quot;quanteda/fr_DZA_elwata.RDS&quot;) summary(qd,5) Corpus consisting of 9898 documents, showing 5 documents: Text Types Tokens Sentences source date regs nbregs 1223806019 4 4 1 fr_DZA_elwata 2019-03-14 0 1223806008 8 8 1 fr_DZA_elwata 2019-03-14 0 1223806016 12 12 1 fr_DZA_elwata 2019-03-14 0 1223806005 8 9 1 fr_DZA_elwata 2019-03-14 0 1223805998 11 11 1 fr_DZA_elwata 2019-03-14 0 paste(qd[1:5]) [1] &quot;On vous le dit&quot; [2] &quot;Un jeune de 17 ans retrouvé à Ghardaïa&quot; [3] &quot;Agence Cnas du port d’Alger : Une demi-journée pour une signature…&quot; [4] &quot;Saisie de 600 kg de kif traité à Khenchela&quot; [5] &quot;Mascara : La cour confirme la peine de prison pour Gharmoul&quot; "],["21-Wikidata.html", "Chapter 4 Wikidata 4.1 Introduction 4.2 Wikidata 4.3 The package WikidataR", " Chapter 4 Wikidata library(knitr) library(dplyr) library(WikidataR) library(quanteda) Authors : Claude Grasland &amp; Etienne Toureille 4.1 Introduction The objective of thisdocument is to explore the possibility of Wikidata for the production of multilingual dictionaries of world regions and more generally regional imaginations. In order to test the interest of this approach, we will try to produce multilingual dictionaries for the identification of five groups of entities : Europe and its subregions Africa and its subregions Asia and its subregions Mediterranea Middle East, Near East, Persian Gulf … The dictionary will be established in five languages of interest for the project IMAGEUN : english : applied to media of UK and Ireland french : applied to media of France and Tunisia german : applied to media of Germany turkish : applied to media of Turkey arabic : applied to media of Tunisia 4.2 Wikidata Wikidata defines itself as a free and open knowledge base that can be read and edited by both humans and machines. as central storage for the structured data of its Wikimedia sister projects including Wikipedia, Wikivoyage, Wiktionary, Wikisource, and others. a support to many other sites and services beyond just Wikimedia projects! The content of Wikidata is available under a free license, exported using standard formats, and can be interlinked to other open data sets on the linked data web. 4.2.1 Codification of entities The first interest of wikidata is to provide unique code of identifications of objects. For example a research about “Africa” will produce a list of different objects characterized by a unique code : knitr::include_graphics(&quot;pics/Wikidata001.png&quot;) 4.2.2 Informations on entities Once we have selected an entity (e.g. Q15) we obtain a new page with more detailed informations in english but also in all other languages available in Wikipedia. knitr::include_graphics(&quot;pics/Wikidata002.png&quot;) A lot of information are available concerning the entity but, at this stage, the most important ones for our research are : the translation in different languages the equivalent words or expression in different languages the definitions in different languages the ambiguity of the term in each language and the potential risks of confusion with other entities. Of course we should not take for granted the answers proposed by wikidata (as noticed by Georg, Wikipedia is a matter of research for IMAGEUN …) but without any doubt, it offers a very good opportunity to clarify our questions and help us to build tools for recognition of world regions and other geographical imaginations in a multilingual perspective. 4.2.3 Wikipedia entities as nodes of an ontolongy It appears crucial to introduce here a clear distinction between Wikipedia entities and textual units associated to the names and definiton of this units. A wikipedia entity like Q15 is an element of an ontology designed by its author for specific purposes. The specificity of the wikidata ontology is the fact that it is a multilinligual web where Q15 is a node of the web present in different linguistic layers. It means that we don’t have a single name or a single definition of Q15, except if we adopt the neocolonial perspective to choose the english language as reference. Depending on the context (i.e. the language or sub-language), Q15 could be defined as : (fr) : A “continent” named “Afrique”\" (en) : A “continent on the Earth’s northern and southern hemispheres” named “Africa” or “African continent” (de) : A “Kontinent auf der Nord- und Südhalbkugel der Erde” named “Afrika” (tr) : A “Dünya’nın kuzey ve güney yarıkürelerindeki bir kıta” named “Afrika” or “Afrika kıtası” (ar) : The \" ثاني أكبر قارات العالم من حيث المساحة وعدد السكان، تأتي في المرتبة الثانية بعد آسيا\" 1 named “إفريقيا” or “القارة الأفريقية” In other words the existence of the same code of wikipedia entities does not offer any guarantee of concordance between the geographical objects found in news published in different languages or different countries. But - and it is the important point - it help us to point similarities and differences between set of geographical entities that are more or less comparable in each language. 4.2.4 A tool for cross-linguistical experiments Having in mind the limits of the equivalence of entities across languages, it can nevertheless be an interesting experience to select a set of wikipedia entities (Q15, Q258, Q4412 …) and to examine their relative frequency in our different media from different countries with different languages. A typical hypothesis could be something like : Is Q15 more mentionned than Q46 in Tunisian newspapers ? which is not equivalent to the question Is Africa more mentionned than Europe in Tunisian newspapers but rather equivalent to the two joint questions Is the textual unit “Afrique” more mentionned than the textual unit “Europe” in Tunisian newspapers published in french language. Is the textual unit “إفريقيا” more mentionned than the textual unit “أوروبا” in Tunisian newspapers published in arabic language. 4.3 The package WikidataR The package WikidataR is an interface for the use of the Wikidata API in R language. Equivalent tools are available in Python and other languages for those non familiar with R. And it is of course possible to use directly the API. The first step is to install the most recent version of the R package WikidataR which install also related packages of interest. #install.packages(&quot;WikidataR&quot;) library(WikidataR) 4.3.1 Basic operations (based on Etienne Toureille previous experiments) 4.3.1.1 identification of entities of interest The function find_item will help to find all wikipedia entities (=items) associated to a textual unit (word or group of word) in given language. Let’s start with the research of entities associated to “Afrique” in french language : mytext &lt;- &quot;Afrique&quot; items &lt;- find_item(search_term = mytext, language = &quot;fr&quot;, limit=30) class(items) [1] &quot;find_item&quot; length(items) [1] 30 The resulting object is an object from type find_item which is in practice a list describing the entities that has been recognized associated to the textual unit that we have chosen. In the french cas, we have found 50 entities that match with our textual unit. Let’s have a look at the first one : items[[1]] $id [1] &quot;Q15&quot; $title [1] &quot;Q15&quot; $pageid [1] 111 $display $display$label $display$label$value [1] &quot;Africa&quot; $display$label$language [1] &quot;en&quot; $display$description $display$description$value [1] &quot;continent on the Earth&#39;s northern and southern hemispheres&quot; $display$description$language [1] &quot;en&quot; $repository [1] &quot;wikidata&quot; $url [1] &quot;//www.wikidata.org/wiki/Q15&quot; $concepturi [1] &quot;http://www.wikidata.org/entity/Q15&quot; $label [1] &quot;Africa&quot; $description [1] &quot;continent on the Earth&#39;s northern and southern hemispheres&quot; $match $match$type [1] &quot;label&quot; $match$language [1] &quot;fr&quot; $match$text [1] &quot;Afrique&quot; $aliases $aliases[[1]] [1] &quot;Afrique&quot; As we can see we can easily identify the code the label and description in english but also the text responsible from the matching answer in french. We can therefore create a function item_info that extract all elements of interest and put them in a table in order to have a complete view. item_info &lt;- function(my_item){ if (is.null(my_item$id) == F){item_id = my_item$id} else {item_id = NA} if (is.null(my_item$label) ==F){item_label = my_item$label} else {item_label = NA} if (is.null(my_item$desc) == F) {item_desc= my_item$desc} else {item_desc = NA} if (is.null(my_item$match$lang) ==F){item_lang = my_item$match$lang} else {item_lang = NA} if (is.null(my_item$match$text) ==F){item_text = my_item$match$text} else {item_text = NA} res&lt;-data.frame(item_id,item_label,item_desc,item_lang,item_text) return(res) } For example : item_info(items[[1]]) item_id item_label item_desc 1 Q15 Africa continent on the Earth&#39;s northern and southern hemispheres item_lang item_text 1 fr Afrique We build then a second function that extract all the wikipedia entities associated to a textual unit for a given language extract_entities &lt;- function(mytext= &quot;Afrique&quot;, mylang = &quot;fr&quot;, maxres = 20) { # Extract items items &lt;- find_item(search_term = mytext, language = mylang, limit = maxres) # Create empty dataset res&lt;-data.frame() res$item_id &lt;- as.character() res$item_label &lt;- as.character() res$item_desc &lt;- as.character() res$item_lang &lt;- as.character() res$item_text &lt;- as.character() # Fill dataset k&lt;-length(items) for (i in 1:k) { res &lt;- rbind(res,item_info(items[[i]])) } # Return dataset return(res) } For example : tab &lt;- extract_entities(&quot;Afrique&quot;,&quot;fr&quot;,20) kable(tab) item_id item_label item_desc item_lang item_text Q15 Africa continent on the Earth’s northern and southern hemispheres fr Afrique Q181238 Africa Roman province on the northern African coast covering parts of present-day Tunisia, Algeria, and Libya fr Afrique Q203548 African Plate continental plate underlying Africa fr Afrique Q258 South Africa country in Southern Africa fr Afrique du Sud Q4412 West Africa westernmost region of the African continent fr Afrique de l’Ouest Q132959 Sub-Saharan Africa area of the continent of Africa that lies south of the Sahara Desert fr Afrique subsaharienne Q27433 Central Africa core region of the African continent fr Afrique centrale Q27394 Southern Africa southernmost region of the African continent fr Afrique australe Q27407 East Africa easterly region of the African continent fr Afrique de l’Est Q27381 North Africa northernmost region of the African continent fr Afrique du Nord Q23639892 Africa artwork by Eugène Delaplanche in Paris, France fr Afrique Q56317928 Afrique ship fr Afrique Q66022909 Afrique NA fr Afrique Q153963 German East Africa former German posesssion in the African Great Lakes region between 1884–1919 fr Afrique orientale allemande Q4690138 Afrique album by Count Basie fr Afrique Q65574303 Afrique NA fr Afrique Q210682 French West Africa French colonial federation (1895–1958) fr Afrique-Occidentale française Q106179043 Afrique NA en Afrique Q66065 Sahel ecoclimatic and biogeographic transition zone in Africa fr Afrique sub-sahélienne Q271894 French Equatorial Africa federation of French colonial possessions in Central Africa fr Afrique-Équatoriale française As we can see, many of the entities proposed in he list are not interesting and we will probably have to select one by one the entities of interest. But we have clearly to keep two different list of entities : the target entities : that we consider as potential world regions or candidate to te title of “geographic imagination”. the control entites : that we have to identify or eliminate if we want to identify correctly our target entities like the country of South Africa In the case of Africa, we could for example establish a more limited list entit &lt;- c(&quot;Q15&quot;, &quot;Q4412&quot;,&quot;Q132959&quot;, &quot;Q27394&quot;,&quot;Q27407&quot;,&quot;Q27381&quot;,&quot;Q27433&quot;,&quot;Q258&quot;) tab&lt;-tab %&gt;% filter(item_id %in% entit) kable(tab) item_id item_label item_desc item_lang item_text Q15 Africa continent on the Earth’s northern and southern hemispheres fr Afrique Q258 South Africa country in Southern Africa fr Afrique du Sud Q4412 West Africa westernmost region of the African continent fr Afrique de l’Ouest Q132959 Sub-Saharan Africa area of the continent of Africa that lies south of the Sahara Desert fr Afrique subsaharienne Q27433 Central Africa core region of the African continent fr Afrique centrale Q27394 Southern Africa southernmost region of the African continent fr Afrique australe Q27407 East Africa easterly region of the African continent fr Afrique de l’Est Q27381 North Africa northernmost region of the African continent fr Afrique du Nord But this list which was based on the french textual units associated to “Afrique” should certainly be completed by equivalent list established for other languages with different seeds (“Africa” in english, “Afrika” in german, …) 4.3.2 Elaboration of a cross_linguistic dictionnary Admitting that we have established a list of wikipedia entities of interest, we can now turn to the creation of a dictionary for the identification of these entities in different languages. We will use for that purpose the powerful function get_properties item_prop &lt;- get_property(&quot;Q15&quot;)[[1]] The result is a very large object (list of list) which provide all the informations (or links toward these information) in all languages wher the object is available. The problem is therefore to understand the structure of this object and to extract exactly what we need. In our case, we want to extract for each language of interest. The information will be separated in two datasets : dictionary of definitions dictionary of labels and aliases We create two functions dedicated to each of the tasks extract_def &lt;- function(item = c(&quot;Q15&quot;, &quot;Q246&quot;), langs = c(&quot;fr&quot;,&quot;de&quot;,&quot;en&quot;,&quot;tr&quot;,&quot;ar&quot;)) { # Create empty dataset res&lt;-data.frame() res$id &lt;- as.character() res$lang &lt;- as.character() res$label &lt;- as.character() res$desc &lt;- as.character() # Loop of items n &lt;- length(item) for (i in 1:n) { # Extract item properties item_prop &lt;- get_property(item[i])[[1]] # Loop of language p&lt;-length(langs) for (j in 1:p) { id &lt;- item[i] lang &lt;- langs[j] if(is.null(item_prop[[&quot;labels&quot;]][[lang]]$value)==F) {label &lt;- item_prop[[&quot;labels&quot;]][[lang]]$value} else { label &lt;- NA} if(is.null(item_prop[[&quot;descriptions&quot;]][[lang]]$value)==F) {desc &lt;- item_prop[[&quot;descriptions&quot;]][[lang]]$value} else { desc &lt;- NA} add &lt;-data.frame(id,lang,label,desc) res&lt;- rbind(res,add) } } # Export result return(res) } The function works proprerly as long as the entities are available in all languages. It should be adapted to prevent errors when an entity is not available in one language. entit &lt;- c(&quot;Q15&quot;, &quot;Q4412&quot;,&quot;Q132959&quot;, &quot;Q27394&quot;,&quot;Q27407&quot;,&quot;Q27381&quot;,&quot;Q27433&quot;,&quot;Q258&quot;) tab&lt;-extract_def(entit,c(&quot;fr&quot;,&quot;de&quot;,&quot;tr&quot;,&quot;en&quot;,&quot;ar&quot;)) kable(tab) id lang label desc Q15 fr Afrique continent Q15 de Afrika Kontinent auf der Nord- und Südhalbkugel der Erde Q15 tr Afrika Dünya’nın kuzey ve güney yarıkürelerindeki bir kıta Q15 en Africa continent on the Earth’s northern and southern hemispheres Q15 ar إفريقيا ثاني أكبر قارات العالم من حيث المساحة وعدد السكان، تأتي في المرتبة الثانية بعد آسيا Q4412 fr Afrique de l’Ouest région d’Afrique Q4412 de Westafrika Kontinentalteil Q4412 tr Batı Afrika Afrika’nın batısındaki 16 ülkenin bulunduğu alan Q4412 en West Africa westernmost region of the African continent Q4412 ar غرب أفريقيا المنطقة الغربية للقارة الأفريقية Q132959 fr Afrique subsaharienne partie du continent africain au sud du Sahara Q132959 de Subsahara-Afrika südlich der Sahara gelegener Teil Afrikas Q132959 tr Sahraaltı Afrika NA Q132959 en Sub-Saharan Africa area of the continent of Africa that lies south of the Sahara Desert Q132959 ar أفريقيا جنوب الصحراء جزء من القارة الأفريقية يقع جنوب الصحراء الكبرى Q27394 fr Afrique australe région la plus méridionale du continent africain Q27394 de Südliches Afrika Region in Afrika Q27394 tr Güney Afrika NA Q27394 en Southern Africa southernmost region of the African continent Q27394 ar أفريقيا الجنوبية المنطقة الجنوبية للقارة الأفريقية Q27407 fr Afrique de l’Est région d’Afrique Q27407 de Ostafrika Region in Afrika Q27407 tr Doğu Afrika NA Q27407 en East Africa easterly region of the African continent Q27407 ar شرق أفريقيا المنطقة الشرقية للقارة الأفريقية Q27381 fr Afrique du Nord région en Afrique Q27381 de Nordafrika Region in Afrika Q27381 tr Kuzey Afrika Afrika kıtasının Fas, Cezayir, Tunus, Libya, Mısır ve Sudan’ı içeren kuzey bölgesi Q27381 en North Africa northernmost region of the African continent Q27381 ar شمال أفريقيا المناطق الجغرافية التي تقع شمال أفريقيا بشكل عام Q27433 fr Afrique centrale Région d’Afrique Q27433 de Zentralafrika Region in Afrika Q27433 tr Orta Afrika Afrika kıtasının Burundi, Orta Afrika Cumhuriyeti, Çad, Kongo Demokratik Cumhuriyeti ve Ruanda’yı barındıran orta kısmı Q27433 en Central Africa core region of the African continent Q27433 ar وسط أفريقيا منطقة رئيسية للقارة الأفريقية Q258 fr Afrique du Sud pays d’Afrique Q258 de Südafrika Staat im Süden Afrikas Q258 tr Güney Afrika Cumhuriyeti Güney Afrika’da bulunan bir ülke Q258 en South Africa country in Southern Africa Q258 ar جنوب أفريقيا دولة في أفريقيا الجنوبية 4.3.3 Extraction of aliases Now we have to extract the aliases which are two texts corresponding to the same entity in a given,language. For example, the Q27394 which correspond to the southern part of Africa (a subregion, not a country) is associated in spanish language to one main label and three equivalenbt alisases item_prop &lt;- get_property(&quot;Q27394&quot;)[[1]] item_prop$labels$es$value [1] &quot;África austral&quot; item_prop$aliases$es language value 1 es África del Sur 2 es sur de África 3 es África de l sureste But in french language, no aliases are mentioned : item_prop$labels$fr$value [1] &quot;Afrique australe&quot; item_prop$aliases$fr NULL The fact that no aliases are mentioned in french language can be considered as non logical as compared to spanish language. And we could certainly imagine to add in french the translation of two spanish aliases: “Afrique méridionale”, “Sud de l’Afrique”. But we can not add “Afrique du Sud” because it is related in french to the state and not to the subregion. Despite the fact that they are not complete, the aliases are certainly a good solution when we want to obtain more efficient dictionaries. For example, if we want to obtain the state of southern Africa (Q258), we can complete the official label by 4 alias in french language and 3 aliases in spanish, taking into account the fact that the text is in upper orlowercase, withor without accent, … item_prop &lt;- get_property(&quot;Q258&quot;)[[1]] item_prop$labels$es$value [1] &quot;Sudáfrica&quot; item_prop$aliases$es language value 1 es República de Sudáfrica 2 es Sudafrica 3 es Republica de Sudafrica item_prop$labels$fr$value [1] &quot;Afrique du Sud&quot; item_prop$aliases$fr language value 1 fr République sud-africaine 2 fr République d’Afrique du Sud 3 fr république sud-africaine 4 fr république d’Afrique du Sud lang=&quot;fr&quot; is.null(item_prop[[&quot;aliases&quot;]][[lang]])!=F [1] FALSE ali &lt;- item_prop[[&quot;aliases&quot;]][[lang]]$value n&lt;-length(ali) for (i in 1:n) { print(ali[i])} [1] &quot;République sud-africaine&quot; [1] &quot;République d’Afrique du Sud&quot; [1] &quot;république sud-africaine&quot; [1] &quot;république d’Afrique du Sud&quot; We propose therefore a function called extract_alias which propose for each entity of interest a list of texts and aliases adapte to each language. We do not store the definition which has been otained previously with the function extract_def : extract_alias &lt;- function(items = c(&quot;Q15&quot;, &quot;Q258&quot;), langs = c(&quot;fr&quot;,&quot;de&quot;,&quot;en&quot;,&quot;tr&quot;,&quot;ar&quot;)) { # Create empty dataset res&lt;-data.frame() res$id &lt;- as.character() res$lang &lt;- as.character() res$label &lt;- as.character() # Loop of items n &lt;- length(items) for (i in 1:n) { # Extract item properties item_prop &lt;- get_property(items[i])[[1]] # Loop of language p&lt;-length(langs) for (j in 1:p) { id &lt;- items[i] lang &lt;- langs[j] if(is.null(item_prop[[&quot;labels&quot;]][[lang]]$value)==F) {label &lt;- item_prop[[&quot;labels&quot;]][[lang]]$value} else { label &lt;- NA} if(is.null(item_prop[[&quot;descriptions&quot;]][[lang]]$value)==F) {desc &lt;- item_prop[[&quot;descriptions&quot;]][[lang]]$value}else { desc &lt;- NA} add &lt;-data.frame(id,lang,label) res&lt;- rbind(res,add) # Loop of aliases if (is.null(item_prop[[&quot;aliases&quot;]][[lang]])==F) { ali &lt;- item_prop[[&quot;aliases&quot;]][[lang]]$value n&lt;-length(ali) for (k in 1:n) { label &lt;- ali[k] add &lt;-data.frame(id,lang,label) res&lt;- rbind(res,add) } } } } # Export result return(res) } Let’s try the function on the case of the continent of “Africa” (Q15), the subregion “South of Africa” (Q27394) and the state of “Southern Africa” (Q258) in five languages : tab&lt;- extract_alias(items = c(&quot;Q15&quot;, &quot;Q27394&quot;, &quot;Q258&quot;), langs = c(&quot;fr&quot;,&quot;de&quot;,&quot;en&quot;,&quot;tr&quot;,&quot;ar&quot;)) kable(tab) id lang label Q15 fr Afrique Q15 de Afrika Q15 en Africa Q15 en African continent Q15 en Ancient Libya Q15 tr Afrika Q15 tr Afrika kıtası Q15 ar إفريقيا Q15 ar القارة الأفريقية Q15 ar أفريقيا Q15 ar إفريقية Q15 ar أفريقية Q27394 fr Afrique australe Q27394 de Südliches Afrika Q27394 de Südafrika Q27394 en Southern Africa Q27394 tr Güney Afrika Q27394 ar أفريقيا الجنوبية Q27394 ar إفريقيا الجنوبية Q27394 ar جنوبي أفريقيا Q27394 ar أفريقيا الجنوبيه Q27394 ar جنوب أفريقيا (منطقة) Q258 fr Afrique du Sud Q258 fr République sud-africaine Q258 fr République d’Afrique du Sud Q258 fr république sud-africaine Q258 fr république d’Afrique du Sud Q258 de Südafrika Q258 de Suedafrika Q258 de Republik Südafrika Q258 en South Africa Q258 en Republic of South Africa Q258 en RSA Q258 en SA Q258 en za Q258 en 🇿🇦 Q258 en zaf Q258 tr Güney Afrika Cumhuriyeti Q258 ar جنوب أفريقيا The function works ! 4.3.4 Conclusion It is now possible to develop a global research strategy for the analysis of world regions : 1. Define a set of target regions in one language : In our example, it was based on the use of the term “Afrique” in french language, but we can imagine a different list. 2. Identify the code of the wikidata entities associated to this target regions : We have generally a lot of entities of minor interest. 3. Identify the code of the other wikidata entities that should be added for control : As we have seen, some entities are likely to create confusion and ambiguity in the definition of target entities. This entity will be transformed in compound or eliminate from the text before to look for the target entities. 4. Extract the properties of the entities in the different languages of interest : this step can be an opportunity to return to step 1. For example, it it appears that some subdivisions of Africa are available in english or german language but not in french. 5. Compare the definitions of Wikipedia entities in different languages : it is important to check if the assumption of identity of the entities is correct or not. If not, some entities will be eliminated from the list. 6. Extract the dictionary of recognition of entities : which can be done in a multilanguage perspective. It is obviously possible to apply the same procedure to different objects like states, capital cities, organizations, people, etc… second largest continent in the world in terms of area and population, comes second only to Asia.↩︎ "],["22-Dicogeo.html", "Chapter 5 Dictionary of geographical entities 5.1 Dictionary of geographical entities", " Chapter 5 Dictionary of geographical entities library(knitr) library(dplyr) library(WikidataR) library(quanteda) 5.1 Dictionary of geographical entities We realize a test of the method described above on a preliminary dictionary of world regions combined with world states described by their names and capital cities 5.1.1 Load the list of world regions, organisation states and capital cities We start from a provisional list of 65 world regions based on continents (cont), other land area (14), sea regions (sea), regional organisations (org), states names (sta) and capital cities of states (cap). ent&lt;-read.table(&quot;dict/worldgeo_codes.csv&quot;, sep=&quot;;&quot;, header=T, encoding = &quot;UTF-8&quot;) table(ent$type) cap cont land org sea sta 194 36 14 44 16 195 5.1.2 Extract définitions We extract the definitions of the regions in the different languages with the function extract_def() ## NOT RUN : need several minutes !!!## worldgeo_def &lt;- extract_def(ent$wikidata,c(&quot;fr&quot;,&quot;de&quot;,&quot;en&quot;,&quot;tr&quot;,&quot;ar&quot;)) names(ent)&lt;-c(&quot;id&quot;,&quot;type_ent&quot;) worldgeo_def&lt;-worldreg_def %&gt;% left_join(ent) write.table(x = worldgeo_def, row.names = FALSE, file = &quot;dict/worldgeo_def.csv&quot;, fileEncoding = &quot;UTF-8&quot;, sep = &quot;;&quot;) saveRDS(object = worldgeo_def, file = &quot;dict/worldgeo_def.RDS&quot;) The dictionary of entities is further analyzed manually and completed by an internal code of entities specific to IMAGEUN’s project 5.1.3 Extract aliases and create dictionary ## NOT RUN : very long time ...### worldgeo_def &lt;- readRDS(&quot;dict/worldgeo_def.RDS&quot;) worldgeo_dict &lt;- extract_alias(worldgeo_def$id, c(&quot;fr&quot;,&quot;de&quot;,&quot;en&quot;,&quot;tr&quot;,&quot;ar&quot;)) write.table(x = worldgeo_dict, row.names = FALSE, file = &quot;dict/worldgeo_dict.csv&quot;, fileEncoding = &quot;UTF-8&quot;, sep = &quot;;&quot;) saveRDS(object = worldgeo_dict, file = &quot;dict/worldgeo_dict.RDS&quot;) "],["23-Taggeo.html", "Chapter 6 Geographical tags 6.1 Detection of geographical entities", " Chapter 6 Geographical tags library(knitr) library(dplyr) library(WikidataR) library(quanteda) 6.1 Detection of geographical entities We have elaborated a function for the extraction of geographical units based on the dictionary elaborated in previous section (dict) according to the language (lang), the decision to split some tokens (split) to move or not to lower case (tolow) and the possibility to add a list of compounds to be realized (comps) in order to eliminate ambiguities. extract_tags &lt;- function(qd = qd, # the corpus of interest lang = &quot;fr&quot;, # the language to be used dict = dict, # the dictionary of target code = &quot;id&quot; , # variable used for coding split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), # split list tolow = FALSE , # Tokenize text comps = c(&quot;Afrique du sud&quot;) # compounds ) { # Tokenize x&lt;-as.character(qd) if(length(split) &gt; 0) { reg&lt;-paste(split, collapse = &#39;|&#39;) x &lt;- gsub(reg,&quot; &quot;,x)} if(tolow) { x &lt;- tolower(x)} toks&lt;-tokens(x) # compounds if(length(split) &gt; 0) { reg&lt;-paste(split, collapse = &#39;|&#39;) comps&lt;- gsub(reg,&quot; &quot;,comps)} if(tolow) {comps &lt;- tolower(comps)} toks&lt;-tokens_compound(toks,pattern=phrase(comps)) # Load dictionaries and create compounds ## Target dictionary dict&lt;-dict[dict$lang==lang &amp; is.na(dict$label)==F,] target&lt;-dict[ntoken(dict$label)&gt;1,] labels &lt;-dict$label if(length(split) &gt; 0) { reg&lt;-paste(split, collapse = &#39;|&#39;) labels&lt;- gsub(reg,&quot; &quot;,labels)} if(tolow) {labels &lt;- tolower(labels)} toks&lt;-tokens_compound(toks,pattern=phrase(labels)) # create quanteda dictionary keys &lt;-gsub(&quot; &quot;,&quot;_&quot;,labels) qd_dict&lt;-as.list(keys) names(qd_dict)&lt;-dict[[code]] qd_dict&lt;-dictionary(qd_dict,tolower = FALSE) # Identify geo tags (states or reg or org ...) toks_tags &lt;- tokens_lookup(toks, qd_dict, case_insensitive = F) toks_tags &lt;- lapply(toks_tags, unique) toks_tags&lt;-as.tokens(toks_tags) list_tags&lt;-function(x){res&lt;-paste(x, collapse=&#39; &#39;)} docvars(qd)[[&quot;tags&quot;]]&lt;-as.character(lapply(toks_tags,FUN=list_tags)) docvars(qd)[[&quot;nbtags&quot;]]&lt;-ntoken(toks_tags) # Export results return(qd) } 6.1.1 Le Figaro (FRA) dict&lt;-readRDS(&quot;dict/worldgeo_dict_V4.RDS&quot;) qd &lt;- readRDS(&quot;quanteda/fr_FRA_figaro.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) frcomps&lt;-c(&quot;Europe 1&quot;, &quot;Atlantic city&quot;, &quot;Loire-Atlantique&quot;, &quot;Pyrénées-Atlantique&quot;, &quot;Pyrénées-Atlantiques&quot;, &quot;Alpes-de-Haute-Provence&quot;, &quot;Hautes-Alpes&quot;, &quot;Rhöne-Alpes&quot;,&quot;Alpes-Maritimes&quot;, &quot;Chantiers de l&#39;Atlantique&quot;, &quot;TGV Atlantique&quot;, &quot;Bourse de Paris&quot;, &quot;Paris SG&quot;, &quot;Ville de Paris&quot;, &quot;Grand Paris&quot;) qd &lt;- extract_tags (qd = qd, lang=&quot;fr&quot;, dict = dict, code = &quot;code&quot;, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), comps = frcomps, tolow = FALSE) saveRDS(qd,&quot;quanteda/fr_FRA_figaro_geo.RDS&quot;) qd1&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),regs=qd$tags,nbregs=qd$nbtags) 6.1.2 Le Monde qd &lt;- readRDS(&quot;quanteda/fr_FRA_lmonde.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;fr&quot;, dict = dict, code = &quot;code&quot;, comps = frcomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/fr_FRA_lmonde_geo.RDS&quot;) qd2&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.3 FAZ qd &lt;- readRDS(&quot;quanteda/de_DEU_frankf.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) decomps &lt;- c(&quot;Europa League&quot;) qd &lt;- extract_tags (qd = qd, lang=&quot;de&quot;, dict = dict, code = &quot;code&quot;, comps = decomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/de_DEU_frankf_geo.RDS&quot;) qd3&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.4 Süddeutsche Zeitung qd &lt;- readRDS(&quot;quanteda/de_DEU_suddeu.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;de&quot;, dict = dict, code = &quot;code&quot;, comps = decomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/de_DEU_suddeu_geo.RDS&quot;) qd4&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.5 Guardian qd &lt;- readRDS(&quot;quanteda/en_GBR_guardi.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) encomps&lt;-c(&quot;Atlantic City&quot;, &quot;Cathay Pacific&quot;, &quot;Virgin Atlantic&quot;) qd &lt;- extract_tags (qd = qd, lang=&quot;en&quot;, dict = dict, code = &quot;code&quot;, comps = encomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/en_GBR_guardi_geo.RDS&quot;) qd5&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.6 Daily Telegraph qd &lt;- readRDS(&quot;quanteda/en_GBR_telegr.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;en&quot;, dict = dict, code = &quot;code&quot;, comps = encomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/en_GBR_telegr_geo.RDS&quot;) qd6&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.7 Belfast Telegraph qd &lt;- readRDS(&quot;quanteda/en_NIR_beltel.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;en&quot;, dict = dict, code = &quot;code&quot;, comps = encomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/en_NIR_beltel_geo.RDS&quot;) qd7&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.8 Irish Times qd &lt;- readRDS(&quot;quanteda/en_IRL_irtime.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;en&quot;, dict = dict, code = &quot;code&quot;, comps = encomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/en_IRL_irtime_geo.RDS&quot;) qd8&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.9 Cumhuryet qd &lt;- readRDS(&quot;quanteda/tr_TUR_cumhur.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) trcomps &lt;- c(&quot;Cathay Pacific&quot;, &quot;Avrupa Ligi&quot;) qd &lt;- extract_tags (qd = qd, lang=&quot;tr&quot;, dict = dict, code = &quot;code&quot;, comps = trcomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/tr_TUR_cumhur_geo.RDS&quot;) qd9&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.10 Yeni Safak qd &lt;- readRDS(&quot;quanteda/tr_TUR_yenisa.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;tr&quot;, dict = dict, code = &quot;code&quot;, comps = trcomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/tr_TUR_yenisa_geo.RDS&quot;) qd10&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.11 Babnet qd &lt;- readRDS(&quot;quanteda/ar_TUN_babnet.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) arcomps &lt;- c(&quot;Cathay Pacific&quot;) qd &lt;- extract_tags (qd = qd, lang=&quot;ar&quot;, dict = dict, code = &quot;code&quot;, comps = arcomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/ar_TUN_babnet_geo.RDS&quot;) qd11&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.12 Réalités qd &lt;- readRDS(&quot;quanteda/fr_TUN_realit.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;fr&quot;, dict = dict, code = &quot;code&quot;, comps = frcomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/fr_TUN_realit_geo.RDS&quot;) qd12&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.13 Economiste Maghrebin qd &lt;- readRDS(&quot;quanteda/fr_TUN_ecomag.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;fr&quot;, dict = dict, code = &quot;code&quot;, comps = frcomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/fr_TUN_ecomag_geo.RDS&quot;) qd13&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.14 La Presse qd &lt;- readRDS(&quot;quanteda/fr_TUN_presse.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;fr&quot;, dict = dict, code = &quot;code&quot;, comps = frcomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/fr_TUN_presse_geo.RDS&quot;) qd14&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.15 Al Nahar (DZA) qd &lt;- readRDS(&quot;quanteda/ar_DZA_alnaha.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;ar&quot;, dict = dict, code = &quot;code&quot;, comps = arcomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/ar_DZA_alnaha_geo.RDS&quot;) qd15&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.16 El Khabar (DZA) qd &lt;- readRDS(&quot;quanteda/ar_DZA_elkahb.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;ar&quot;, dict = dict, code = &quot;code&quot;, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/ar_DZA_elkahb_geo.RDS&quot;) qd16&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.17 El Watan (DZA) qd &lt;- readRDS(&quot;quanteda/fr_DZA_elwata.RDS&quot;) docvars(qd)&lt;-docvars(qd)[c(&quot;source&quot;,&quot;date&quot;)] qd&lt;-corpus_subset(qd,duplicated(as.character(qd))==FALSE) qd &lt;- extract_tags (qd = qd, lang=&quot;fr&quot;, dict = dict, code = &quot;code&quot;, comps = frcomps, split = c(&quot;&#39;&quot;,&quot;’&quot;,&quot;-&quot;), tolow = FALSE) saveRDS(qd,&quot;quanteda/fr_DZA_elwata_geo.RDS&quot;) qd17&lt;-qd table(qd$nbtags) x&lt;-data.frame(text=as.character(qd),tags=qd$tags,nbtags=qd$nbtags) 6.1.18 Global corpus qd &lt;- c(qd1,qd2,qd3,qd4,qd5,qd6,qd7,qd8,qd9,qd10,qd11,qd12,qd13,qd14,qd15,qd16,qd17) saveRDS(qd,&quot;quanteda/corpus_worldgeo_001.RDS&quot;) table(qd$nbtags) "],["30-Hypercube.html", "Chapter 7 Hypercube 7.1 Objectives 7.2 Prepare data 7.3 Geographical entities", " Chapter 7 Hypercube library(knitr) library(dplyr) library(quanteda) library(data.table) Attaching package: &#39;data.table&#39; The following objects are masked from &#39;package:dplyr&#39;: between, first, last The following object is masked from &#39;package:purrr&#39;: transpose library(tidytext) library(FactoMineR) library(Factoshiny) Loading required package: shiny Loading required package: FactoInvestigate library(explor) 7.1 Objectives We have created a list of tags relate to world regions for news published in 14 newspapers. We propose now to build an hypercube in order to explore the results. 7.2 Prepare data 7.2.1 Load corpus qd&lt;-readRDS(&quot;quanteda/corpus_worldgeo_001.RDS&quot;) 7.2.2 Load hypercube function hypercube &lt;-function(qd = qd, when = &quot;date&quot;, when_cut = &quot;year&quot;, who = &quot;source&quot;, where1 = &quot;tags&quot;, where2 = &quot;tags&quot;) { # create data.table accroding to parameter chosen don&lt;-docvars(qd) df&lt;-data.table(id = docid(qd), who = don[,who], when = as.character(cut(don[,when],breaks=when_cut)), where1 = don[,where1], where2 = don[,where2]) # add code _no_ for empty fields df$where1[df$where1==&quot;&quot;]&lt;-&quot;_no_&quot; df$where2[df$where2==&quot;&quot;]&lt;-&quot;_no_&quot; # unnest where1 df&lt;-unnest_tokens(df,where1,where1,to_lower=F) # unnest where2 df&lt;-unnest_tokens(df,where2,where2,to_lower=F) # define number of occurence by id nb&lt;-df[,.N,list(id)] %&gt;% mutate(wgt = 1/N) %&gt;% select(-N) df&lt;-df %&gt;% left_join(nb) rm(nb) # Aggregate hc&lt;- df[,.( tags = .N, news=sum(wgt)) ,.(who, when,where1,where2)] # Convert date to time hc$when&lt;-as.Date(hc$when) # return hypercube return(hc) } 7.2.3 Create Hypercube hc_reg &lt;- hypercube(qd = qd, when = &quot;date&quot;, when_cut = &quot;months&quot;, who = &quot;source&quot;, where1 = &quot;tags&quot;, where2 = &quot;tags&quot;) Joining, by = &quot;id&quot; kable(head(hc_reg)) who when where1 where2 tags news fr_FRA_figaro 2019-01-01 no no 2481 2481.00 fr_FRA_figaro 2019-01-01 CA_JPN CA_JPN 6 5.25 fr_FRA_figaro 2019-01-01 ST_THA ST_THA 8 6.50 fr_FRA_figaro 2019-01-01 ST_COD ST_COD 25 22.75 fr_FRA_figaro 2019-01-01 ST_QAT ST_QAT 3 3.00 fr_FRA_figaro 2019-01-01 ST_GAB ST_GAB 5 5.00 7.2.4 Load Wikidata entity names reg_def&lt;-readRDS(&quot;dict/worldgeo_def_V1.RDS&quot;) # Choose language tab_def&lt;-reg_def %&gt;% filter(lang == &quot;en&quot;) kable(head(tab_def)) id lang label type code Q15 en Africa cont CO_AFR Q828 en Americas cont CO_AMR Q48 en Asia cont CO_ASI Q46 en Europe cont CO_EUR Q538 en Insular Oceania cont CO_OCE Q51 en Antarctica cont CO_ANT 7.3 Geographical entities 7.3.1 Which % of news ? What is the percentage of news where at less one geographical entity is mentioned ? hc_reg$tagged&lt;-hc_reg$where1!=&quot;_no_&quot; df&lt;-hc_reg[,list(nb = sum(news)), list(who, tagged)] %&gt;% dcast(formula = who~tagged, value.var = &quot;nb&quot;) names(df)&lt;-c(&quot;media&quot;,&quot;No&quot;, &quot;Yes&quot;) df$Tot = df$No+df$Yes df$Pct = 100*df$Yes/df$Tot df&lt;-df[order(df$Pct)] kable(df, digits=2) media No Yes Tot Pct ar_DZA_elkahb 49126 7710 56836 13.57 fr_DZA_elwata 8244 1414 9658 14.64 tr_TUR_cumhur 111949 19500 131449 14.83 de_DEU_frankf 74508 13563 88071 15.40 fr_TUN_presse 9544 1740 11284 15.42 en_NIR_beltel 81965 17095 99060 17.26 ar_DZA_alnaha 28907 6245 35152 17.77 en_IRL_irtime 85652 21101 106753 19.77 de_DEU_suddeu 28303 7094 35397 20.04 ar_TUN_babnet 33769 8588 42357 20.28 fr_TUN_ecomag 10050 2718 12768 21.29 en_GBR_telegr 29452 8452 37904 22.30 fr_TUN_realit 17709 5117 22826 22.42 tr_TUR_yenisa 74609 21562 96171 22.42 en_GBR_guardi 58080 18966 77046 24.62 fr_FRA_figaro 91861 36428 128289 28.40 fr_FRA_lmonde 33683 15872 49555 32.03 7.3.2 Which entities are the most mentionned ? Iw we put together all newspapers, we obtain the following table # Compute df&lt;-hc_reg[where1 !=&quot;_no_&quot;,list(nb = sum(news)), list(where1)] # df&lt;-as.data.frame(df) df&lt;-merge(tab_def,df,by.x=&quot;code&quot;,by.y=&quot;where1&quot;,all.x=F,all.y=T) df&lt;-df[order(df$nb, decreasing = T),] row.names(df)&lt;-1:dim(df)[1] kable(df, digits=0,row.names = T) code id lang label type nb 1 ST_USA Q30 en United States of America sta 12232 2 ST_IRL Q27 en Ireland sta 11993 3 ST_FRA Q142 en France sta 10831 4 ST_TUR Q43 en Turkey sta 8778 5 ST_TUN Q948 en Tunisia sta 6977 6 OR_EU Q458 en European Union org 6474 7 ST_CHN Q148 en People’s Republic of China sta 6332 8 ST_CAN Q16 en Canada sta 6031 9 CA_FRA Q90 en Paris cap 5625 10 ST_DEU Q183 en Germany sta 5145 11 CO_EUR Q46 en Europe cont 4849 12 ST_DZA Q262 en Algeria sta 4021 13 CA_IRL Q1761 en Dublin cap 3940 14 ST_ITA Q38 en Italy sta 3926 15 ST_RUS Q159 en Russia sta 3812 16 ST_ISR Q801 en Israel sta 3461 17 ST_IRN Q794 en Iran sta 3228 18 ST_GBR Q145 en United Kingdom sta 3015 19 CA_TUN Q3572 en Tunis cap 2950 20 CA_DZA Q3561 en Algiers cap 2941 21 CA_GBR Q84 en London cap 2750 22 ST_LBY Q1016 en Libya sta 2574 23 ST_IND Q668 en India sta 2527 24 ST_ESP Q29 en Spain sta 2497 25 ST_AFG Q889 en Afghanistan sta 2421 26 CA_JPN Q1490 en Tokyo cap 2405 27 ST_AUS Q408 en Australia sta 2287 28 ST_SYR Q858 en Syria sta 1902 29 ST_JPN Q17 en Japan sta 1890 30 ST_GRC Q41 en Greece sta 1830 31 ST_BRA Q155 en Brazil sta 1794 32 CA_TUR Q3640 en Ankara cap 1792 33 CA_ESP Q2807 en Madrid cap 1712 34 CA_DEU Q64 en Berlin cap 1582 35 CO_AFR Q15 en Africa cont 1545 36 ST_SAU Q851 en Saudi Arabia sta 1488 37 CA_USA Q61 en Washington, D.C. cap 1426 38 ST_NZL Q664 en New Zealand sta 1224 39 ST_MAR Q1028 en Morocco sta 1169 40 ST_EGY Q79 en Egypt sta 1141 41 ST_UKR Q212 en Ukraine sta 1129 42 ST_IRQ Q796 en Iraq sta 1114 43 ST_VEN Q717 en Venezuela sta 1076 44 ST_MMR Q836 en Myanmar sta 1042 45 ST_QAT Q846 en Qatar sta 1006 46 ST_BLR Q184 en Belarus sta 952 47 ST_LBN Q822 en Lebanon sta 946 48 ST_MEX Q96 en Mexico sta 918 49 ST_ZAF Q258 en South Africa sta 885 50 ST_MLI Q912 en Mali sta 884 51 ST_AUT Q40 en Austria sta 870 52 ST_NLD Q29999 en Kingdom of the Netherlands sta 841 53 ST_BEL Q31 en Belgium sta 836 54 ST_AZE Q227 en Azerbaijan sta 836 55 SE_medit Q4918 en Mediterranean Sea sea 800 56 ST_POL Q36 en Poland sta 793 57 CA_ITA Q220 en Rome cap 782 58 ST_CHE Q39 en Switzerland sta 779 59 ST_PAK Q843 en Pakistan sta 779 60 CA_AFG Q5838 en Kabul cap 763 61 ST_PRK Q423 en North Korea sta 746 62 ST_ARM Q399 en Armenia sta 745 63 ST_SWE Q34 en Sweden sta 742 64 ST_NGA Q1033 en Nigeria sta 740 65 CA_BEL Q239 en City of Brussels cap 725 66 CA_RUS Q649 en Moscow cap 681 67 ST_DNK Q35 en Denmark sta 674 68 ST_ISL Q189 en Iceland sta 671 69 CA_CHN Q956 en Beijing cap 669 70 ST_PRT Q45 en Portugal sta 659 71 ST_SDN Q1049 en Sudan sta 641 72 ST_ARE Q878 en United Arab Emirates sta 574 73 ST_IDN Q252 en Indonesia sta 562 74 ST_GEO Q230 en Georgia sta 557 75 ST_YEM Q805 en Yemen sta 550 76 ST_COD Q974 en Democratic Republic of the Congo sta 545 77 ST_JOR Q810 en Jordan sta 541 78 ST_ARG Q414 en Argentina sta 541 79 ST_KOR Q884 en South Korea sta 530 80 CA_ISR Q1218 en Jerusalem cap 511 81 ST_HUN Q28 en Hungary sta 489 82 CO_ASI_minor Q12824780 en Asia Minor cont 477 83 OR_NATO Q7184 en NATO org 474 84 ST_MCO Q235 en Monaco sta 467 85 ST_COL Q739 en Colombia sta 447 86 ST_LKA Q854 en Sri Lanka sta 440 87 SE_black Q166 en Black Sea sea 432 88 ST_NOR Q20 en Norway sta 421 89 ST_THA Q869 en Thailand sta 394 90 CA_LBN Q3820 en Beirut cap 358 91 ST_PER Q419 en Peru sta 357 92 ST_TWN Q865 en Taiwan sta 353 93 ST_CIV Q1008 en Côte d’Ivoire sta 341 94 ST_ETH Q115 en Ethiopia sta 337 95 ST_VAT Q237 en Vatican City sta 324 96 ST_HTI Q790 en Haiti sta 322 97 ST_CHL Q298 en Chile sta 318 98 LA_east_middle Q7204 en Middle East land 314 99 CO_ASI Q48 en Asia cont 313 100 CA_AUT Q1741 en Vienna cap 311 101 ST_CUB Q241 en Cuba sta 304 102 CA_MEX Q1489 en Mexico City cap 298 103 ST_PHL Q928 en Philippines sta 298 104 ST_HRV Q224 en Croatia sta 279 105 ST_NER Q1032 en Niger sta 272 106 ST_BOL Q750 en Bolivia sta 265 107 CA_SYC Q3940 en Victoria cap 262 108 ST_ZWE Q954 en Zimbabwe sta 262 109 ST_BFA Q965 en Burkina Faso sta 256 110 ST_GIN Q1006 en Guinea sta 249 111 ST_SEN Q1041 en Senegal sta 247 112 LA_sahel Q66065 en Sahel land 247 113 LA_alpen Q1286 en Alps land 240 114 ST_KEN Q114 en Kenya sta 237 115 ST_VUT Q686 en Vanuatu sta 234 116 ST_BGR Q219 en Bulgaria sta 233 117 CA_IRQ Q1530 en Baghdad cap 232 118 ST_CZE Q213 en Czech Republic sta 231 119 ST_RWA Q1037 en Rwanda sta 227 120 ST_CMR Q1009 en Cameroon sta 225 121 ST_CYP Q229 en Cyprus sta 224 122 CA_IRN Q3616 en Tehran cap 221 123 ST_VNM Q881 en Vietnam sta 221 124 ST_ROU Q218 en Romania sta 220 125 ST_BGD Q902 en Bangladesh sta 220 126 CA_GRC Q1524 en Athens cap 219 127 CA_LBY Q3579 en Tripoli cap 218 128 ST_FIN Q33 en Finland sta 216 129 ST_SRB Q403 en Serbia sta 213 130 CA_EGY Q85 en Cairo cap 212 131 ST_BHR Q398 en Bahrain sta 206 132 ST_MYS Q833 en Malaysia sta 204 133 SE_arcti Q25322 en Arctic sea 182 134 ST_MOZ Q1029 en Mozambique sta 180 135 ST_SVK Q214 en Slovakia sta 179 136 CO_AMR Q828 en Americas cont 178 137 ST_MRT Q1025 en Mauritania sta 173 138 CA_NLD Q727 en Amsterdam cap 172 139 ST_UGA Q1036 en Uganda sta 171 140 CA_QAT Q3861 en Doha cap 168 141 ST_MUS Q1027 en Mauritius sta 163 142 ST_MLT Q233 en Malta sta 161 143 ST_SOM Q1045 en Somalia sta 160 144 ST_TCD Q657 en Chad sta 151 145 ST_TZA Q924 en Tanzania sta 149 146 CA_CZE Q1085 en Prague cap 140 147 ST_KGZ Q813 en Kyrgyzstan sta 138 148 ST_MDG Q1019 en Madagascar sta 137 149 CA_ARE Q1519 en Abu Dhabi cap 137 150 ST_NIC Q811 en Nicaragua sta 134 151 SE_pacif Q98 en Pacific Ocean sea 132 152 CO_AMR_latin Q12585 en Latin America cont 131 153 ST_SLV Q792 en El Salvador sta 131 154 ST_MKD Q221 en North Macedonia sta 130 155 ST_ALB Q222 en Albania sta 130 156 SE_atlan Q97 en Atlantic Ocean sea 129 157 CA_SGP Q334 en Singapore cap 125 158 ST_SGP Q334 en Singapore sta 125 159 ST_GHA Q117 en Ghana sta 124 160 ST_KAZ Q232 en Kazakhstan sta 122 161 LA_sahara Q6583 en Sahara land 120 162 LA_mashr Q28227 en Maghreb land 118 163 ST_OMN Q842 en Oman sta 117 164 CA_PRT Q597 en Lisbon cap 117 165 ST_CAF Q929 en Central African Republic sta 116 166 CA_SEN Q3718 en Dakar cap 115 167 CO_ANT Q51 en Antarctica cont 112 168 ST_ECU Q736 en Ecuador sta 112 169 LA_amazon Q2841453 en Amazonia land 110 170 ST_BIH Q225 en Bosnia and Herzegovina sta 109 171 ST_DMA Q784 en Dominica sta 106 172 CA_UKR Q1899 en Kyiv cap 103 173 CA_KOR Q8684 en Seoul cap 103 174 ST_ZMB Q953 en Zambia sta 103 175 ST_LTU Q37 en Lithuania sta 100 176 CA_SAU Q3692 en Riyadh cap 99 177 CA_HUN Q1781 en Budapest cap 98 178 ST_BWA Q963 en Botswana sta 94 179 CA_AZE Q9248 en Baku cap 94 180 ST_KHM Q424 en Cambodia sta 89 181 CO_AFR_south Q27394 en Southern Africa cont 88 182 ST_BEN Q962 en Benin sta 87 183 CA_BGR Q472 en Sofia cap 86 184 ST_MNE Q236 en Montenegro sta 86 185 SE_carai Q664609 en Caribbean sea 85 186 CA_KWT Q35178 en Kuwait City cap 83 187 CA_DNK Q1748 en Copenhagen cap 82 188 ST_SVN Q215 en Slovenia sta 82 189 ST_KWT Q817 en Kuwait sta 82 190 ST_NPL Q837 en Nepal sta 81 191 CA_SYR Q3766 en Damascus cap 81 192 ST_SSD Q958 en South Sudan sta 80 193 ST_FJI Q712 en Fiji sta 80 194 SE_polyn Q35942 en Polynesia sea 78 195 ST_EST Q191 en Estonia sta 74 196 ST_MDA Q217 en Moldova sta 74 197 ST_GTM Q774 en Guatemala sta 73 198 CO_AMR_south Q18 en South America cont 71 199 OR_CoEur Q8908 en Council of Europe org 70 200 CA_POL Q270 en Warsaw cap 70 201 CA_LUX Q1842 en Luxembourg cap 70 202 ST_LUX Q32 en Luxembourg sta 70 203 LA_east_near Q48214 en Near East land 69 204 ST_URY Q77 en Uruguay sta 69 205 ST_HND Q783 en Honduras sta 69 206 CO_ERA Q5401 en Eurasia cont 68 207 CA_PRK Q18808 en Pyongyang cap 67 208 CA_THA Q1861 en Bangkok cap 66 209 ST_AND Q228 en Andorra sta 63 210 ST_BHS Q778 en The Bahamas sta 63 211 ST_NAM Q1030 en Namibia sta 63 212 CA_BLR Q2280 en Minsk cap 62 213 ST_LVA Q211 en Latvia sta 61 214 ST_JAM Q766 en Jamaica sta 57 215 CA_SRB Q3711 en Belgrade cap 56 216 ST_UZB Q265 en Uzbekistan sta 56 217 CA_SWE Q1754 en Stockholm cap 55 218 ST_PNG Q691 en Papua New Guinea sta 54 219 ST_MDV Q826 en Maldives sta 54 220 ST_PRY Q733 en Paraguay sta 54 221 ST_PAN Q804 en Panama sta 52 222 OR_ArLig Q7172 en Arab League org 51 223 LA_balka Q23522 en Balkans land 50 224 OR_Merco Q4264 en Mercosur org 50 225 CO_AMR_centr Q27611 en Central America cont 49 226 CA_NOR Q585 en Oslo cap 49 227 ST_TJK Q863 en Tajikistan sta 48 228 CA_CUB Q1563 en Havana cap 48 229 ST_MWI Q1020 en Malawi sta 47 230 ST_COG Q971 en Republic of the Congo sta 47 231 CA_FIN Q1757 en Helsinki cap 47 232 CO_AFR_west Q4412 en West Africa cont 47 233 OR_AfrUn Q7159 en African Union org 46 234 ST_CRI Q800 en Costa Rica sta 46 235 ST_SLB Q685 en Solomon Islands sta 46 236 CA_HRV Q1435 en Zagreb cap 45 237 ST_BDI Q967 en Burundi sta 44 238 CA_CHE Q70 en Bern cap 43 239 CA_VNM Q1858 en Hanoi cap 43 240 ST_WSM Q683 en Samoa sta 42 241 CA_ZWE Q3921 en Harare cap 42 242 CO_AMR_north Q49 en North America cont 42 243 CO_AMR_north Q2017699 en Northern America cont 42 244 ST_GMB Q1005 en The Gambia sta 41 245 CA_IND Q987 en New Delhi cap 40 246 ST_GAB Q1000 en Gabon sta 39 247 CA_MLT Q23800 en Valletta cap 38 248 OR_comwl Q7785 en Commonwealth of Nations org 37 249 SE_antil Q166131 en Antilles sea 36 250 ST_AGO Q916 en Angola sta 36 251 ST_GNQ Q983 en Equatorial Guinea sta 36 252 CA_PAN Q3306 en Panama City cap 35 253 LA_cauca Q18869 en Caucasus land 35 254 CA_ARG Q1486 en Buenos Aires cap 34 255 CA_MAR Q3551 en Rabat cap 34 256 CA_COL Q2841 en Bogotá cap 34 257 CA_IDN Q3630 en Jakarta cap 34 258 CO_ASI_south_east Q11708 en Southeast Asia cont 34 259 LA_himal Q5451 en Himalayas land 33 260 CA_BIH Q11194 en Sarajevo cap 33 261 CA_VEN Q1533 en Caracas cap 33 262 ST_BRN Q921 en Brunei sta 32 263 ST_SLE Q1044 en Sierra Leone sta 31 264 CO_AFR_north Q27381 en North Africa cont 31 265 ST_MNG Q711 en Mongolia sta 31 266 ST_DJI Q977 en Djibouti sta 30 267 CA_CHL Q2887 en Santiago cap 30 268 CO_EUR_east_centr Q27468 en Eastern Europe cont 30 269 ST_BRB Q244 en Barbados sta 29 270 ST_TKM Q874 en Turkmenistan sta 29 271 CA_SOM Q2449 en Mogadishu cap 28 272 CA_SDN Q1963 en Khartoum cap 28 273 CA_DJI Q3604 en Djibouti cap 28 274 ST_TUV Q672 en Tuvalu sta 27 275 ST_TON Q678 en Tonga sta 27 276 CA_ARM Q1953 en Yerevan cap 26 277 CO_AFR_ssahr Q132959 en Sub-Saharan Africa cont 26 278 CA_KEN Q3870 en Nairobi cap 26 279 CO_ASI_centr Q27275 en Central Asia cont 26 280 CA_PER Q2868 en Lima cap 26 281 ST_VCT Q757 en Saint Vincent and the Grenadines sta 26 282 ST_DOM Q786 en Dominican Republic sta 25 283 ST_SYC Q1042 en Seychelles sta 25 284 ST_LIE Q347 en Liechtenstein sta 25 285 ST_TGO Q945 en Togo sta 24 286 ST_LBR Q1014 en Liberia sta 24 287 CO_ASI_pacif Q1070940 en Asia-Pacific cont 23 288 CA_AUS Q3114 en Canberra cap 23 289 CA_MLI Q3703 en Bamako cap 22 290 SE_china_south Q37660 en South China Sea sea 22 291 CA_COD Q3838 en Kinshasa cap 21 292 SE_persi Q34675 en Persian Gulf sea 21 293 CA_KAZ Q1520 en Nur-Sultan cap 21 294 CA_PHL Q1461 en Manila cap 21 295 SE_india Q1239 en Indian Ocean sea 20 296 CA_ISL Q1764 en Reykjavík cap 20 297 CA_SMR Q1848 en San Marino cap 19 298 ST_SMR Q238 en San Marino sta 19 299 ST_GNB Q1007 en Guinea-Bissau sta 19 300 CA_JOR Q3805 en Amman cap 19 301 CA_ETH Q3624 en Addis Ababa cap 19 302 CA_GTM Q1555 en Guatemala City cap 19 303 LA_scand Q21195 en Scandinavia land 18 304 ST_LSO Q1013 en Lesotho sta 18 305 CO_AFR_east Q27407 en East Africa cont 18 306 CA_RWA Q3859 en Kigali cap 17 307 CA_MCO Q55115 en Monaco City cap 17 308 CA_OMN Q3826 en Muscat cap 17 309 CO_EUR_centr Q27509 en Central Europe cont 17 310 CA_EST Q1770 en Tallinn cap 16 311 CA_GIN Q3733 en Conakry cap 16 312 ST_COM Q970 en Comoros sta 16 313 CA_TLS Q9310 en Dili cap 16 314 CA_ROU Q19660 en Bucharest cap 16 315 ST_GRD Q769 en Grenada sta 16 316 ST_ERI Q986 en Eritrea sta 15 317 CO_EUR_south Q27449 en Southern Europe cont 15 318 ST_MHL Q709 en Marshall Islands sta 15 319 CA_AGO Q3897 en Luanda cap 14 320 CA_LTU Q216 en Vilnius cap 14 321 LA_rocky Q5463 en Rocky Mountains land 14 322 CA_JAM Q34692 en Kingston cap 13 323 CA_CAN Q1930 en Ottawa cap 13 324 CA_SVK Q1780 en Bratislava cap 13 325 ST_CPV Q1011 en Cape Verde sta 12 326 ST_SUR Q730 en Suriname sta 12 327 ST_GUY Q734 en Guyana sta 12 328 CO_EUR_north Q27479 en Northern Europe cont 12 329 CA_MRT Q3688 en Nouakchott cap 11 330 CA_PAK Q1362 en Islamabad cap 11 331 OR_ECWAS Q193272 en Economic Community of West African States org 11 332 CO_ASI_south Q771405 en South Asia cont 11 333 CA_CAF Q3832 en Bangui cap 10 334 CA_LVA Q1773 en Riga cap 10 335 CA_GEO Q994 en Tbilisi cap 10 336 CA_BGD Q1354 en Dhaka cap 10 337 CA_BRA Q2844 en Brasília cap 10 338 ST_TLS Q574 en Timor-Leste sta 10 339 CO_AFR_centr Q27433 en Central Africa cont 9 340 ST_LAO Q819 en Laos sta 9 341 ST_SWZ Q1050 en Eswatini sta 9 342 ST_BTN Q917 en Bhutan sta 9 343 CA_NER Q3674 en Niamey cap 8 344 OR_TurCo Q596850 en Turkic Council org 8 345 CA_BFA Q3777 en Ouagadougou cap 8 346 CA_NRU Q31026 en Yaren District cap 8 347 CA_NZL Q23661 en Wellington cap 8 348 CA_CYP Q3856 en Nicosia cap 8 349 CA_ECU Q2900 en Quito cap 8 350 CA_YEM Q2471 en Sanaa cap 7 351 CA_SVN Q437 en Ljubljana cap 7 352 CA_GHA Q3761 en Accra cap 7 353 CA_TWN Q1867 en Taipei cap 7 354 CA_MYS Q1865 en Kuala Lumpur cap 6 355 CO_OCE Q538 en Insular Oceania cont 6 356 CA_GUY Q10717 en Georgetown cap 6 357 CA_LKA Q35381 en Colombo cap 6 358 CA_BHR Q3882 en Manama cap 6 359 CA_CRI Q3070 en San José cap 6 360 CA_GRD Q41547 en St. George’s cap 6 361 CA_UGA Q3894 en Kampala cap 6 362 CO_ASI_east Q27231 en East Asia cont 6 363 ST_PLW Q695 en Palau sta 6 364 ST_BLZ Q242 en Belize sta 5 365 ST_TTO Q754 en Trinidad and Tobago sta 5 366 ST_NRU Q697 en Nauru sta 5 367 CA_HTI Q34261 en Port-au-Prince cap 5 368 OR_Viseg Q244323 en Visegrád Group org 5 369 OR_CCASG Q217172 en Cooperation Council for the Arab States of the Gulf org 5 370 CA_ALB Q19689 en Tirana cap 4 371 CA_CMR Q3808 en Yaoundé cap 4 372 CO_EUR_west Q27496 en Western Europe cont 4 373 LA_anden Q5456 en Andes land 4 374 OR_OAS Q123759 en Organization of American States org 4 375 CA_MKD Q384 en Skopje cap 4 376 CA_NGA Q3787 en Abuja cap 4 377 CA_BHS Q2467 en Nassau cap 4 378 CA_COG Q3844 en Brazzaville cap 4 379 CA_TCD Q3659 en N’Djamena cap 4 380 ST_LCA Q760 en Saint Lucia sta 4 381 CO_AFR_frenc Q210682 en French West Africa cont 4 382 CA_GNQ Q3818 en Malabo cap 4 383 CA_CPV Q3751 en Praia cap 4 384 CO_ASI_ind Q60140 en Indian subcontinent cont 4 385 ST_KIR Q710 en Kiribati sta 3 386 CA_BOL Q1491 en La Paz cap 3 387 CA_KGZ Q9361 en Bishkek cap 3 388 CA_LIE Q1844 en Vaduz cap 3 389 CA_SSD Q1947 en Juba cap 3 390 OR_Shang Q485207 en Shanghai Cooperation Organisation org 3 391 CA_GNB Q3739 en Bissau cap 3 392 CA_ERI Q3642 en Asmara cap 2 393 CA_SLE Q3780 en Freetown cap 2 394 CA_ZAF Q3926 en Pretoria cap 2 395 CA_ATG Q36262 en Saint John’s cap 2 396 CA_GAB Q3825 en Libreville cap 2 397 CA_NPL Q3037 en Kathmandu cap 2 398 CA_PRY Q2933 en Asunción cap 2 399 CO_EUR_east Q16389571 en East-Central Europe cont 2 400 OR_Asean Q7768 en ASEAN org 2 401 OR_PIF Q757276 en Pacific Islands Forum org 2 402 OR_RCEP Q11523819 en Regional Comprehensive Economic Partnership org 2 403 OR_SAARC Q145700 en South Asian Association for Regional Cooperation org 2 404 CA_KHM Q1850 en Phnom Penh cap 2 405 CO_EUR_south_east Q263686 en Southeast Europe cont 2 406 SE_china_east Q45341 en East China Sea sea 1 407 CA_LCA Q41699 en Castries cap 1 408 CA_MOZ Q3889 en Maputo cap 1 409 CA_UZB Q269 en Tashkent cap 1 410 CO_EUR_centr_east Q900636 en Central and Eastern Europe cont 1 411 OR_APEC Q170481 en Asia-Pacific Economic Cooperation org 1 412 OR_CIS Q7779 en Commonwealth of Independent States org 1 413 SE_micro Q3359409 en Micronesia sea 1 414 ST_FSM Q702 en Federated States of Micronesia sta 1 415 ST_KNA Q763 en Saint Kitts and Nevis sta 1 416 CA_DOM Q34820 en Santo Domingo cap 1 417 CA_BWA Q3919 en Gaborone cap 0 418 CA_MMR Q37400 en Naypyidaw cap 0 419 CA_MUS Q3929 en Port Louis cap 0 420 SE_melan Q37394 en Melanesia sea 0 7.3.3 Top non state entities by media # Compute df&lt;-hc_reg[where1 !=&quot;_no_&quot;,list(nb = sum(news)), list(where1, who)] %&gt;% group_by(who) %&gt;% filter((substr(where1,1,2) %in% c(&quot;CA&quot;,&quot;ST&quot;))==FALSE) %&gt;% mutate(pct = 100*nb/sum(nb), rnk = rank(-nb)) df&lt;-merge(tab_def,df,by.x=&quot;code&quot;,by.y=&quot;where1&quot;,all.x=F,all.y=T) res &lt;- df %&gt;% filter(rnk &lt; 11) %&gt;% select(who, rnk,label, pct) %&gt;% mutate(who=substr(who,4,12)) res&lt;-res[order(res$who, res$rnk),] kable(res,digits=c(0,1)) who rnk label pct 123 DEU_frank 1.0 European Union 48.3 57 DEU_frank 2.0 Europe 26.9 13 DEU_frank 3.0 Africa 3.5 158 DEU_frank 4.0 Mediterranean Sea 2.0 26 DEU_frank 5.0 Americas 1.9 42 DEU_frank 6.0 Asia 1.9 68 DEU_frank 7.0 Alps 1.6 74 DEU_frank 8.0 Middle East 1.5 24 DEU_frank 9.0 Southern Africa 1.4 65 DEU_frank 10.0 Eastern Europe 0.9 118 DEU_sudde 1.0 European Union 52.9 49 DEU_sudde 2.0 Europe 22.4 2 DEU_sudde 3.0 Africa 3.9 72 DEU_sudde 4.0 Middle East 3.8 165 DEU_sudde 5.0 Mediterranean Sea 2.7 66 DEU_sudde 6.0 Alps 2.4 32 DEU_sudde 7.0 South America 1.1 85 DEU_sudde 8.5 Near East 0.9 145 DEU_sudde 8.5 Arctic 0.9 23 DEU_sudde 10.0 Southern Africa 0.9 14 DZA_alnah 1.0 Africa 40.1 63 DZA_alnah 2.0 Europe 29.1 131 DZA_alnah 3.0 European Union 11.2 43 DZA_alnah 4.0 Asia 3.7 101 DZA_alnah 5.0 Sahel 3.6 77 DZA_alnah 6.0 Middle East 2.6 112 DZA_alnah 7.0 Arab League 2.3 166 DZA_alnah 8.0 Mediterranean Sea 2.0 89 DZA_alnah 9.0 Maghreb 1.3 136 DZA_alnah 10.0 NATO 0.9 9 DZA_elkah 1.0 Africa 55.0 61 DZA_elkah 2.0 Europe 20.9 117 DZA_elkah 3.0 European Union 7.4 156 DZA_elkah 4.0 Mediterranean Sea 3.8 37 DZA_elkah 5.0 Asia 2.8 81 DZA_elkah 6.0 Middle East 2.6 103 DZA_elkah 7.0 Sahel 1.8 90 DZA_elkah 8.0 Maghreb 1.8 109 DZA_elkah 9.0 Arab League 1.2 148 DZA_elkah 10.0 Atlantic Ocean 0.8 96 DZA_elwat 1.0 Sahara 27.0 16 DZA_elwat 2.0 Africa 20.0 121 DZA_elwat 3.0 European Union 10.2 100 DZA_elwat 4.0 Sahel 10.1 58 DZA_elwat 5.0 Europe 9.1 91 DZA_elwat 6.0 Maghreb 8.8 21 DZA_elwat 7.5 North Africa 2.5 157 DZA_elwat 7.5 Mediterranean Sea 2.5 84 DZA_elwat 9.0 Near East 1.9 108 DZA_elwat 10.0 African Union 1.6 51 FRA_figar 1.0 Europe 31.1 127 FRA_figar 2.0 European Union 26.5 163 FRA_figar 3.0 Mediterranean Sea 3.9 5 FRA_figar 4.0 Africa 3.8 67 FRA_figar 5.0 Alps 3.6 70 FRA_figar 6.0 Amazonia 2.7 99 FRA_figar 7.0 Sahel 2.6 25 FRA_figar 8.0 Americas 2.5 134 FRA_figar 9.0 NATO 2.2 170 FRA_figar 10.0 Polynesia 2.0 60 FRA_lmond 1.0 Europe 30.4 122 FRA_lmond 2.0 European Union 19.2 17 FRA_lmond 3.0 Africa 13.3 102 FRA_lmond 4.0 Sahel 4.3 69 FRA_lmond 5.0 Alps 3.6 161 FRA_lmond 6.0 Mediterranean Sea 3.4 71 FRA_lmond 7.0 Amazonia 1.9 138 FRA_lmond 8.0 NATO 1.8 30 FRA_lmond 9.0 Latin America 1.7 75 FRA_lmond 10.0 Middle East 1.6 120 GBR_guard 1.0 European Union 39.5 54 GBR_guard 2.0 Europe 22.6 12 GBR_guard 3.0 Africa 6.0 144 GBR_guard 4.0 Arctic 4.3 80 GBR_guard 5.0 Middle East 3.9 167 GBR_guard 6.0 Pacific Ocean 3.4 139 GBR_guard 7.0 NATO 2.4 146 GBR_guard 8.0 Atlantic Ocean 2.0 39 GBR_guard 9.0 Asia 1.7 29 GBR_guard 10.0 Latin America 1.6 129 GBR_teleg 1.0 European Union 49.2 50 GBR_teleg 2.0 Europe 26.1 11 GBR_teleg 3.0 Africa 7.6 38 GBR_teleg 4.0 Asia 2.5 143 GBR_teleg 5.0 Arctic 1.5 79 GBR_teleg 6.0 Middle East 1.3 114 GBR_teleg 7.5 Commonwealth of Nations 1.1 153 GBR_teleg 7.5 Caribbean 1.1 168 GBR_teleg 9.0 Pacific Ocean 1.0 31 GBR_teleg 10.0 Latin America 0.9 126 IRL_irtim 1.0 European Union 64.2 53 IRL_irtim 2.0 Europe 20.6 8 IRL_irtim 3.0 Africa 2.0 41 IRL_irtim 4.0 Asia 1.4 147 IRL_irtim 5.0 Atlantic Ocean 1.3 133 IRL_irtim 6.0 NATO 1.2 83 IRL_irtim 7.0 Middle East 1.1 169 IRL_irtim 8.0 Pacific Ocean 0.8 27 IRL_irtim 9.5 Americas 0.6 28 IRL_irtim 9.5 Latin America 0.6 125 NIR_belte 1.0 European Union 63.0 55 NIR_belte 2.0 Europe 19.9 3 NIR_belte 3.0 Africa 2.6 142 NIR_belte 4.0 Arctic 1.9 115 NIR_belte 5.0 Commonwealth of Nations 1.8 73 NIR_belte 6.0 Middle East 1.5 35 NIR_belte 7.0 Asia 1.4 152 NIR_belte 8.0 Caribbean 1.2 137 NIR_belte 9.0 NATO 1.1 149 NIR_belte 10.0 Atlantic Ocean 1.0 15 TUN_babne 1.0 Africa 29.2 116 TUN_babne 2.0 European Union 25.5 64 TUN_babne 3.0 Europe 17.5 104 TUN_babne 4.0 Sahel 5.7 86 TUN_babne 5.0 Maghreb 4.9 78 TUN_babne 6.0 Middle East 4.2 34 TUN_babne 7.0 Asia 2.8 111 TUN_babne 8.0 Arab League 2.5 164 TUN_babne 9.0 Mediterranean Sea 1.2 141 TUN_babne 10.0 NATO 1.0 6 TUN_ecoma 1.0 Africa 34.5 130 TUN_ecoma 2.0 European Union 23.1 52 TUN_ecoma 3.0 Europe 10.0 92 TUN_ecoma 4.0 Maghreb 8.2 159 TUN_ecoma 5.0 Mediterranean Sea 7.2 19 TUN_ecoma 6.0 North Africa 3.2 98 TUN_ecoma 7.0 Sahel 2.5 76 TUN_ecoma 8.0 Middle East 1.8 95 TUN_ecoma 9.0 Sahara 1.7 107 TUN_ecoma 10.5 African Union 1.2 113 TUN_ecoma 10.5 Arab League 1.2 7 TUN_press 1.0 Africa 33.1 160 TUN_press 2.0 Mediterranean Sea 19.3 124 TUN_press 3.0 European Union 11.4 105 TUN_press 4.0 Sahel 11.1 48 TUN_press 5.0 Europe 5.2 106 TUN_press 6.0 African Union 4.7 88 TUN_press 7.0 Maghreb 3.7 18 TUN_press 8.0 North Africa 2.8 94 TUN_press 9.0 Sahara 2.6 10 TUN_reali 1.0 Africa 37.6 119 TUN_reali 2.0 European Union 16.7 56 TUN_reali 3.0 Europe 14.7 97 TUN_reali 4.0 Sahel 6.7 87 TUN_reali 5.0 Maghreb 5.8 154 TUN_reali 6.0 Mediterranean Sea 4.5 93 TUN_reali 7.0 Sahara 4.0 82 TUN_reali 8.0 Middle East 2.5 20 TUN_reali 9.0 North Africa 2.1 110 TUN_reali 10.0 Arab League 1.4 59 TUR_cumhu 1.0 Europe 32.6 132 TUR_cumhu 2.0 European Union 18.3 44 TUR_cumhu 3.0 Asia Minor 13.4 155 TUR_cumhu 4.0 Mediterranean Sea 9.3 151 TUR_cumhu 5.0 Black Sea 7.1 140 TUR_cumhu 6.0 NATO 6.0 1 TUR_cumhu 7.0 Africa 2.5 40 TUR_cumhu 8.0 Asia 2.0 47 TUR_cumhu 9.0 Eurasia 1.5 22 TUR_cumhu 10.0 Southern Africa 1.2 62 TUR_yenis 1.0 Europe 25.5 128 TUR_yenis 2.0 European Union 19.3 162 TUR_yenis 3.0 Mediterranean Sea 13.3 150 TUR_yenis 4.0 Black Sea 11.8 45 TUR_yenis 5.0 Asia Minor 8.4 135 TUR_yenis 6.0 NATO 7.0 4 TUR_yenis 7.0 Africa 4.4 46 TUR_yenis 8.0 Eurasia 1.6 36 TUR_yenis 9.0 Asia 1.5 33 TUR_yenis 10.0 Antarctica 1.0 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
